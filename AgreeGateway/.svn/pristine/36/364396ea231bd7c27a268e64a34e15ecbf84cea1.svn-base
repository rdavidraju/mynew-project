<div style="height: 100%; width: 100%">
    <!-- <vertical-split-pane primary-component-minsize="50" primary-component-initialratio="0.2" [primary-component-toggled-off]="isVisibleA">
        <div id="sticky" class="leftpane split-pane-content-primary">
            <ledger-definition-side-bar></ledger-definition-side-bar>
        </div>
        <div class="split-pane-content-secondary rightpane">
            <span class="fa fa-bars hand ripple sbclose" mdTooltip="Toggle Sidebar" (click)="toggleSB()" *ngIf="!isCreateNew"></span> -->
            <div class="component-body">
                <div class="botom-dotted-blue-border component-title">
                    <div class="col-md-6 col-sm-6 col-xs-6 pageTitle" style="padding-left:0px;">
                        <h3 *ngIf="isCreateNew">Ledger Definition Creation:</h3>
                        <h3 *ngIf="!isCreateNew">Ledger Definition Details</h3>
                    </div>
                    <div class="col-md-6 col-sm-6 col-xs-6">
                        <div class="row float-right">
                            <button *ngIf="!isViewOnly && f.valid" md-icon-button class="pull-right color-green" aria-hidden="true" mdTooltip="Save"
                                (click)="saveLedger()">
                                <md-icon>save</md-icon>
                            </button>
                            <button *ngIf="!isViewOnly && !f.valid" md-icon-button class="pull-right color-gray" aria-hidden="true" mdTooltip="Fill mandatory fields"
                                (click)="validationMsg()">
                                <md-icon>save</md-icon>
                            </button>
                            <button *ngIf="isViewOnly" md-icon-button mdTooltip="Edit" [routerLink]="['/ledger-definition', {outlets: {'content': [ledgerDefinition.id]+'/edit'}}]">
                                <md-icon>mode_edit</md-icon>
                            </button>
                            <button *ngIf="isEdit" md-icon-button class="pull-right color-gray" mdTooltip="Close" [routerLink]="['/ledger-definition', {outlets: {'content': [ledgerDefinition.id]+'/details'}}]">
                                <md-icon>clear</md-icon>
                            </button>
                            <button *ngIf="isCreateNew" md-icon-button class="pull-right color-gray" mdTooltip="Close" [routerLink]="['/ledger-definition', {outlets: {'content': ['ledger-definition-home']}}]">
                                <md-icon>clear</md-icon>
                            </button>
                            <button *ngIf="isViewOnly" md-icon-button mdTooltip="Go Back" [routerLink]="['/ledger-definition', {outlets: {'content': ['ledger-definition-home']}}]">
                                <md-icon>undo</md-icon>
                            </button>
                        </div>
                    </div>
                </div>
                <!-- Form Start Here -->
                <div>
                        <br>
                        <form novalidate #f="ngForm">
                            <div class="row leftmargin-20">
                                <div class="col-md-4 col-sm-6 col-xs-12 form-group" style="display:inline-block">
                                    <md-input-container>
                                        <input mdInput [(ngModel)]="ledgerDefinition.name" [ngClass]="{'color-black' : !isCreateNew}" [disabled]="!isCreateNew" placeholder="Name"
                                            name="name" required #name="ngModel" id="name" (blur)="isNameExist(ledgerDefinition.name, ledgerDefinition.id)" (ngModelChange)="nameExist = ''">
                                    </md-input-container>
                                    <small class="form-text text-danger" *ngIf="nameExist">{{nameExist}}</small>
                                </div>
                    
                                <div class="col-md-4 col-sm-6 col-xs-12 form-group" *ngIf="ledgerDefinition.description || !isViewOnly">
                                    <md-input-container>
                                        <input mdInput [(ngModel)]="ledgerDefinition.description" [ngClass]="{'color-black' : isViewOnly}" [disabled]="isViewOnly" placeholder="Description"
                                            name="description" #description="ngModel">
                                    </md-input-container>
                                </div>
                    
                                <div class="col-md-4 col-sm-6 col-xs-12 form-group">
                                    <md-select placeholder="Ledger Type" [(ngModel)]="ledgerDefinition.ledgerType" name="ledgerType" [disabled]="!isCreateNew" [style.width]="'100%'" required>
                                        <md-option *ngFor="let col of ledgerType" [(value)]="col.lookUpCode">{{ col.meaning }}</md-option>
                                    </md-select>
                                </div>
    
                                <div class="col-md-4 col-sm-6 col-xs-12 form-group">
                                    <md-form-field>
                                        <input mdInput [mdDatepicker]="stpicker" placeholder="Start Date" [max]="ledgerDefinition.endDate" [ngClass]="{'color-black' : isViewOnly}" [disabled]="isViewOnly"
                                            [(ngModel)]="ledgerDefinition.startDate" name="startDate" required>
                                        <md-datepicker-toggle mdSuffix [for]="stpicker" *ngIf="!isViewOnly"></md-datepicker-toggle>
                                        <md-datepicker #stpicker></md-datepicker>
                                    </md-form-field>
                                </div>
                    
                                <div class="col-md-4 col-sm-6 col-xs-12 form-group" *ngIf="ledgerDefinition.startDate && (ledgerDefinition.endDate || !isViewOnly)">
                                    <md-form-field>
                                        <input mdInput [mdDatepicker]="edpicker" placeholder="End Date" [min]="ledgerDefinition.startDate" [ngClass]="{'color-black' : isViewOnly}"
                                            [disabled]="isViewOnly" [(ngModel)]="ledgerDefinition.endDate" name="endDate">
                                        <md-datepicker-toggle mdSuffix [for]="edpicker" *ngIf="!isViewOnly"></md-datepicker-toggle>
                                        <md-datepicker #edpicker></md-datepicker>
                                    </md-form-field>
                                </div>
                    
                                <div class="col-md-1" *ngIf="isEdit" style="display:flex">
                                    <span *ngIf="ledgerDefinition.enabledFlag">Active</span>
                                    <span *ngIf="!ledgerDefinition.enabledFlag">Inactive</span>
                                    <md-slide-toggle class="pull right" color="primary" [disabled]="!isEdit" mdTooltip="Set Status" placeholder="Status" [(ngModel)]="ledgerDefinition.enabledFlag"
                                        name="status">
                                    </md-slide-toggle>
                                </div>
                                <div class="col-md-1" *ngIf="isViewOnly">
                                    <span class="badge badge-success" *ngIf="ledgerDefinition.enabledFlag">Active</span>
                                    <span class="badge badge-warning" *ngIf="!ledgerDefinition.enabledFlag">Inactive</span>
                                </div>
                            </div>

                            <!-- Ledger Detail -->
                            <hr>
                            <div class="row">
                                <div class="col-md-4 col-sm-6 col-xs-12 form-group">
                                    <md-select placeholder="Currency" [(ngModel)]="ledgerDefinition.currency" name="currency" [disabled]="!isCreateNew" [style.width]="'100%'" required>
                                        <md-option *ngFor="let col of currencies" [(value)]="col.cc">{{ col.cv }}</md-option>
                                    </md-select>
                                </div>

                                <div class="col-md-4 col-sm-6 col-xs-12 form-group">
                                    <md-select placeholder="Calendar" [(ngModel)]="ledgerDefinition.calendarId" name="calendarId" [disabled]="!isCreateNew" [style.width]="'100%'" required>
                                        <md-option *ngFor="let col of calendars" [(value)]="col.id">{{ col.name }}</md-option>
                                    </md-select>
                                </div>

                                <div class="col-md-4 col-sm-6 col-xs-12 form-group">
                                    <md-select placeholder="Chart of Account" [(ngModel)]="ledgerDefinition.coaId" name="coaId" [disabled]="!isCreateNew" [style.width]="'100%'" required>
                                        <md-option *ngFor="let col of chartOfAccounts" [(value)]="col.id">{{ col.name }}</md-option>
                                    </md-select>
                                </div>
                            </div>
                        </form>
                    </div>
            </div>
        <!-- </div>
    </vertical-split-pane> -->
</div>

<!-- 
<div *ngIf="ledgerDefinition">
    <h2><span jhiTranslate="agreeGatewayV1App.ledgerDefinition.detail.title">Ledger Definition</span> {{ledgerDefinition.id}}</h2>
    <hr>
    <jhi-alert-error></jhi-alert-error>
    <dl class="row-md jh-entity-details">
        <dt><span jhiTranslate="agreeGatewayV1App.ledgerDefinition.tenantId">Tenant Id</span></dt>
        <dd>
            <span>{{ledgerDefinition.tenantId}}</span>
        </dd>
        <dt><span jhiTranslate="agreeGatewayV1App.ledgerDefinition.name">Name</span></dt>
        <dd>
            <span>{{ledgerDefinition.name}}</span>
        </dd>
        <dt><span jhiTranslate="agreeGatewayV1App.ledgerDefinition.description">Description</span></dt>
        <dd>
            <span>{{ledgerDefinition.description}}</span>
        </dd>
        <dt><span jhiTranslate="agreeGatewayV1App.ledgerDefinition.ledgerType">Ledger Type</span></dt>
        <dd>
            <span>{{ledgerDefinition.ledgerType}}</span>
        </dd>
        <dt><span jhiTranslate="agreeGatewayV1App.ledgerDefinition.startDate">Start Date</span></dt>
        <dd>
            <span>{{ledgerDefinition.startDate | date:'mediumDate'}}</span>
        </dd>
        <dt><span jhiTranslate="agreeGatewayV1App.ledgerDefinition.endDate">End Date</span></dt>
        <dd>
            <span>{{ledgerDefinition.endDate | date:'mediumDate'}}</span>
        </dd>
        <dt><span jhiTranslate="agreeGatewayV1App.ledgerDefinition.currency">Currency</span></dt>
        <dd>
            <span>{{ledgerDefinition.currency}}</span>
        </dd>
        <dt><span jhiTranslate="agreeGatewayV1App.ledgerDefinition.calendarId">Calendar Id</span></dt>
        <dd>
            <span>{{ledgerDefinition.calendarId}}</span>
        </dd>
        <dt><span jhiTranslate="agreeGatewayV1App.ledgerDefinition.status">Status</span></dt>
        <dd>
            <span>{{ledgerDefinition.status}}</span>
        </dd>
        <dt><span jhiTranslate="agreeGatewayV1App.ledgerDefinition.enabledFlag">Enabled Flag</span></dt>
        <dd>
            <span>{{ledgerDefinition.enabledFlag}}</span>
        </dd>
        <dt><span jhiTranslate="agreeGatewayV1App.ledgerDefinition.createdBy">Created By</span></dt>
        <dd>
            <span>{{ledgerDefinition.createdBy}}</span>
        </dd>
        <dt><span jhiTranslate="agreeGatewayV1App.ledgerDefinition.createdDate">Created Date</span></dt>
        <dd>
            <span>{{ledgerDefinition.createdDate | date:'medium'}}</span>
        </dd>
        <dt><span jhiTranslate="agreeGatewayV1App.ledgerDefinition.lastUpdatedBy">Last Updated By</span></dt>
        <dd>
            <span>{{ledgerDefinition.lastUpdatedBy}}</span>
        </dd>
        <dt><span jhiTranslate="agreeGatewayV1App.ledgerDefinition.lastUpdatedDate">Last Updated Date</span></dt>
        <dd>
            <span>{{ledgerDefinition.lastUpdatedDate | date:'medium'}}</span>
        </dd>
    </dl>

    <button type="submit"
            (click)="previousState()"
            class="btn btn-info">
        <span class="fa fa-arrow-left"></span>&nbsp;<span jhiTranslate="entity.action.back"> Back</span>
    </button>

    <button type="button"
            [routerLink]="['/', { outlets: { popup: 'ledger-definition/'+ ledgerDefinition.id + '/edit'} }]"
            replaceUrl="true"
            class="btn btn-primary">
        <span class="fa fa-pencil"></span>&nbsp;<span jhiTranslate="entity.action.edit"> Edit</span>
    </button>
</div>
 -->