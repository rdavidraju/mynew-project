import { Injectable } from '@angular/core';
import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Routes, CanActivate } from '@angular/router';
import { UserRouteAccessService } from '../../shared';
import { JhiPaginationUtil } from 'ng-jhipster';

import { UserMgmtComponent } from './user-management.component';
import { UserMgmtDetailComponent } from './user-management-detail.component';
import { UserDialogComponent } from './user-management-dialog.component';
import { UserDeleteDialogComponent } from './user-management-delete-dialog.component';
import { UserMgmtBreadCrumbTitles } from './user-management.model';
import { UserMgmtHomeComponent } from './user-management-home.component';


import { Principal } from '../../shared';

@Injectable()
export class UserResolve implements CanActivate {

    constructor(private principal: Principal) { }

    canActivate() {
        return this.principal.identity().then((account) => this.principal.hasAnyAuthority(['ROLE_ADMIN']));
    }
}

@Injectable()
export class UserResolvePagingParams implements Resolve<any> {

    constructor(private paginationUtil: JhiPaginationUtil) {}

    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {
        const page = route.queryParams['page'] ? route.queryParams['page'] : '1';
        const sort = route.queryParams['sort'] ? route.queryParams['sort'] : 'id,asc';
        return {
            page: this.paginationUtil.parsePage(page),
            predicate: this.paginationUtil.parsePredicate(sort),
            ascending: this.paginationUtil.parseAscending(sort)
        };
    }
}
/* export const userMgmtRoute: Routes = [
  {
    path: 'user-management',
    component: UserMgmtComponent,
    data: {
        pageTitle: 'userManagement.home.title'
    },
    children: [
    {
        path: 'user-management-new',
        component: UserDialogComponent,
        outlet: 'popup'
    },
    {
        path: 'user-management-home',
        component: UserMgmtComponent,
        outlet: 'popup'
    }
    ,
    {
        path: 'user-management-assignRole',
    component: UserDialogComponent,
    data: {
        pageTitle: 'userManagement.home.title'
        }  
        
    }
        ]
  },
    {
     path: 'user-management-home',
    component: UserMgmtComponent,
    data: {
        pageTitle: 'userManagement.home.title'
        }   
    }
    ]; */

    export const userMgmtRoute: Routes = [
    {
        path: 'user-management',
        component: UserMgmtHomeComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'userManagement.home.title'
        },
        children: [
            {
                path: 'user-management-home',
                component: UserMgmtComponent,
                resolve: {
                    'pagingParams': UserResolvePagingParams
                },
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'userManagement.home.title',
                    breadcrumb: UserMgmtBreadCrumbTitles.userMgmtList
                },
                outlet: 'content'
            },
            {
                path: ':id/details',
                component: UserMgmtDetailComponent,
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'userManagement.home.title',
                    breadcrumb: UserMgmtBreadCrumbTitles.userMgmtDetails
                },
                outlet: 'content'
            },
            {
                path: 'user-management-new',
                component: UserMgmtDetailComponent,
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'userManagement.home.title',
                    breadcrumb: UserMgmtBreadCrumbTitles.userMgmtNew
                },
                outlet: 'content'
            },
            {
                path: ':id/edit',
                component: UserMgmtDetailComponent,
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'userManagement.home.title',
                    breadcrumb: UserMgmtBreadCrumbTitles.userMgmtEdit
                },
                outlet: 'content'
            }
        ]
    }
];
//export const userMgmtRoute: Routes = [
//    {
//        path: 'user-management',
//        component: UserMgmtComponent,
//        resolve: {
//            'pagingParams': UserResolvePagingParams
//        },
//        data: {
//            pageTitle: 'userManagement.home.title'
//        }
//    },
//    {
//        path: 'user-management/:login',
//        component: UserMgmtDetailComponent,
//        data: {
//            pageTitle: 'userManagement.home.title'
//        }
//    }
//];
//
export const userDialogRoute: Routes = [
    {
        path: 'user-management-new',
        component: UserDialogComponent,
        outlet: 'popup'
    },
    {
        path: 'user-management/:login/edit',
        component: UserDialogComponent,
        outlet: 'popup'
    },
    {
        path: 'user-management/:login/delete',
        component: UserDeleteDialogComponent,
        outlet: 'popup'
    }
];
