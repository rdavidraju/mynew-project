<div style="height: 100%; width: 100%">
    <!-- <vertical-split-pane primary-component-minsize="50" primary-component-initialratio="0.2" [primary-component-toggled-off]="isVisibleA">
        <div id="sticky" class="leftpane split-pane-content-primary">
            <chart-of-account-side-bar></chart-of-account-side-bar>
        </div>
        <div class="split-pane-content-secondary rightpane">
            <span class="fa fa-bars hand ripple sbclose" mdTooltip="Toggle Sidebar" (click)="toggleSB()" *ngIf="!isCreateNew"></span> -->
            <div class="component-body">
                <div class="botom-dotted-blue-border component-title">
                    <div class="col-md-6 col-sm-6 col-xs-6 pageTitle" style="padding-left:0px">
                        <h3 *ngIf="isCreateNew">Chart of Account Creation:</h3>
                        <h3 *ngIf="!isCreateNew">Chart of Account Details</h3>
                    </div>
                    <div class="col-md-6 col-sm-6 col-xs-6">
                        <div class="row float-right">
                            <button *ngIf="!isViewOnly && f.valid" md-icon-button class="pull-right color-green" aria-hidden="true" mdTooltip="Save"
                                (click)="saveCoa()">
                                <md-icon>save</md-icon>
                            </button>
                            <button *ngIf="!isViewOnly && !f.valid" md-icon-button class="pull-right color-gray" aria-hidden="true" mdTooltip="Fill mandatory fields"
                                (click)="validationMsg('COA')">
                                <md-icon>save</md-icon>
                            </button>
                            <button *ngIf="isViewOnly" md-icon-button mdTooltip="Edit" [routerLink]="['/chart-of-account', {outlets: {'content': [chartOfAccount.id]+'/edit'}}]">
                                <md-icon>mode_edit</md-icon>
                            </button>
                            <button *ngIf="isEdit" md-icon-button class="pull-right color-gray" mdTooltip="Close" [routerLink]="['/chart-of-account', {outlets: {'content': [chartOfAccount.id]+'/details'}}]">
                                <md-icon>clear</md-icon>
                            </button>
                            <button *ngIf="isCreateNew" md-icon-button class="pull-right color-gray" mdTooltip="Close" [routerLink]="['/chart-of-account', {outlets: {'content': ['chart-of-account-home']}}]">
                                <md-icon>clear</md-icon>
                            </button>
                            <button *ngIf="isViewOnly" md-icon-button mdTooltip="Go Back" [routerLink]="['/chart-of-account', {outlets: {'content': ['chart-of-account-home']}}]">
                                <md-icon>undo</md-icon>
                            </button>
                        </div>
                    </div>
                </div>
                <!-- Form Start Here -->
                <div>
                    <br>
                    <form novalidate #f="ngForm">
                        <div class="row leftmargin-20">
                            <div class="col-md-4 col-sm-6 col-xs-12 form-group">
                                <md-input-container>
                                    <input mdInput [(ngModel)]="chartOfAccount.name" [ngClass]="{'color-black' : isViewOnly}" [disabled]="isViewOnly" placeholder="Name"
                                        name="name" required #name="ngModel" id="name" (blur)="checkDuplicates(chartOfAccount.name, chartOfAccount.id)">
                                </md-input-container>
                            </div>
                
                            <div class="col-md-4 col-sm-6 col-xs-12 form-group" *ngIf="chartOfAccount.description || !isViewOnly">
                                <md-input-container>
                                    <input mdInput [(ngModel)]="chartOfAccount.description" [ngClass]="{'color-black' : isViewOnly}" [disabled]="isViewOnly" placeholder="Description"
                                        name="description" #description="ngModel">
                                </md-input-container>
                            </div>

                            <div class="col-md-4 col-sm-6 col-xs-12 form-group">
                                <md-select placeholder="Segment Separator" [(ngModel)]="chartOfAccount.segmentSeperator" name="segmentSeperator" [disabled]="isViewOnly" [style.width]="'100%'" required>
                                    <md-option *ngFor="let col of segmentSeperator" [(value)]="col.lookUpCode">{{ col.meaning }}</md-option>
                                </md-select>
                            </div>

                            <div class="col-md-4 col-sm-6 col-xs-12 form-group">
                                <md-form-field>
                                    <input mdInput [mdDatepicker]="stpicker" placeholder="Start Date" [ngClass]="{'color-black' : isViewOnly}" [disabled]="isViewOnly"
                                        [(ngModel)]="chartOfAccount.startDate" name="startDate" required>
                                    <md-datepicker-toggle mdSuffix [for]="stpicker" *ngIf="!isViewOnly"></md-datepicker-toggle>
                                    <md-datepicker #stpicker></md-datepicker>
                                </md-form-field>
                            </div>
                
                            <div class="col-md-4 col-sm-6 col-xs-12 form-group" *ngIf="chartOfAccount.startDate && (chartOfAccount.endDate || !isViewOnly)">
                                <md-form-field>
                                    <input mdInput [mdDatepicker]="edpicker" placeholder="End Date" [min]="chartOfAccount.startDate" [ngClass]="{'color-black' : isViewOnly}"
                                        [disabled]="isViewOnly" [(ngModel)]="chartOfAccount.endDate" name="endDate">
                                    <md-datepicker-toggle mdSuffix [for]="edpicker" *ngIf="!isViewOnly"></md-datepicker-toggle>
                                    <md-datepicker #edpicker></md-datepicker>
                                </md-form-field>
                            </div>
                
                            <div class="col-md-1" *ngIf="isEdit" style="display:flex">
                                <span *ngIf="chartOfAccount.enabledFlag">Active</span>
                                <span *ngIf="!chartOfAccount.enabledFlag">Inactive</span>
                                <md-slide-toggle class="pull right" color="primary" [disabled]="!isEdit" mdTooltip="Set Status" placeholder="Status" [(ngModel)]="chartOfAccount.enabledFlag"
                                    name="status">
                                </md-slide-toggle>
                            </div>
                            <div class="col-md-1" *ngIf="isViewOnly">
                                <span class="badge badge-success" *ngIf="chartOfAccount.enabledFlag">Active</span>
                                <span class="badge badge-warning" *ngIf="!chartOfAccount.enabledFlag">Inactive</span>
                            </div>
                        </div>

                        <!-- COA Segment Details -->
                        <br>
                        <div class="table-responsive">
                            <perfect-scrollbar>
                                <table class="table tableView basicTable">
                                    <thead>
                                        <tr>
                                            <th>Segment Name</th>
                                            <th>Segment Length</th>
                                            <th>Values</th>
                                            <th>
                                                <button md-icon-button class="color-yellow-green pull-right" mdTooltip="Add Segment" (click)="addNewSegment()">
                                                        <md-icon>exposure_plus_1</md-icon>
                                                </button>
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr *ngFor="let col of chartOfAccount.segments;let i = index;" id="hideIconTable">
                                            <td class="matbasictabletd">
                                                <md-input-container>
                                                    <input mdInput [(ngModel)]="col.segmentName" name="segmentName-{{i}}" required [disabled]="!col.columnEdit" [ngClass]="{'color-black' : !col.columnEdit}" [ngModelOptions]="{standalone: true}">
                                                </md-input-container>
                                            </td>
                                            <td class="md-no-placeholder">
                                                <md-select [(ngModel)]="col.segmentLength" name="segmentLength-{{i}}" [disabled]="!col.columnEdit" [style.width]="'100%'" required [ngModelOptions]="{standalone: true}" [ngStyle]="{'padding-top':col.columnEdit?'7px':'0px'}">
                                                    <md-option *ngFor="let col of segmentLength" [(value)]="col.segLen">{{ col.segLen }}</md-option>
                                                </md-select>
                                            </td>
                                            <td class="matbasictabletd md-no-placeholder">
                                                <!-- <md-input-container *ngIf="segmentValues.length<1">
                                                    <input mdInput [(ngModel)]="col.valueId" name="valueId-{{i}}" required [disabled]="!col.columnEdit" [ngClass]="{'color-black' : !col.columnEdit}" [ngModelOptions]="{standalone: true}">
                                                    <button md-icon-button class="color-yellow-green pull-right" mdTooltip="Create {{col.valueId}} Mapping Set" (click)="createMappingSet(col,i)" style="bottom:10px" *ngIf="col.valueId">
                                                        <md-icon>add</md-icon>
                                                    </button>
                                                </md-input-container> -->
                                                <!-- *ngIf="segmentValues.length>0" -->
                                                <md-select [(ngModel)]="col.valueId" name="valueId-{{i}}" [disabled]="!col.columnEdit" [style.width]="'100%'" required [ngModelOptions]="{standalone: true}" [ngStyle]="{'padding-top':col.columnEdit?'7px':'0px'}" (change)="createMappingSet(col,i)">
                                                    <md-option value="CreateNew">Create New</md-option>
                                                    <md-option *ngFor="let col of valueSetsList" [(value)]="col.id">{{ col.name }}</md-option>
                                                </md-select>
                                            </td>
                                            <td>
                                                <div class="display-flex pull-right" id="showIcon">
                                                    <button *ngIf="col.columnEdit && isViewOnly" md-icon-button class="color-green" style="font-size: 24px;" aria-hidden="true"
                                                        mdTooltip="Save" (click)="updateSegment(col)">
                                                            <md-icon>save</md-icon>
                                                    </button>
                                                    <button *ngIf="col.columnEdit && isViewOnly" (click)="cancelEdit()" md-icon-button class="pull-right color-gray"
                                                        style="font-size: 24px;" mdTooltip="Cancel">
                                                        <md-icon>clear</md-icon>
                                                    </button>
                                                    <!-- <button md-icon-button mdTooltip="Edit" (click)="editSegment(i)" *ngIf="!col.columnEdit && isViewOnly">
                                                        <md-icon>mode_edit</md-icon>
                                                    </button>
                                                    <button md-icon-button mdTooltip="delete" *ngIf="!col.columnEdit && isViewOnly" (click)="deleteSegment(col)">
                                                        <md-icon>delete</md-icon>
                                                    </button> -->
                                                    <button md-icon-button mdTooltip="Delete" *ngIf="isCreateNew" (click)="deleteRow(i)">
                                                        <md-icon>delete</md-icon>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </perfect-scrollbar>
                        </div>
                    </form>
                    <!-- Values Set -->
                    <div class="dnd-usermgmt">
                        <div class="target-data">
                            <p-dialog header="Value Set Creation" [(visible)]="valueSetDialog" [resizable]="true" [responsive]="true" [dismissableMask]="true" (onHide)="dialogHide()">
                                <div class="row">
                                    <div class="col-md-3">
                                        <md-input-container>
                                            <input mdInput [(ngModel)]="mappingSet.name" [ngClass]="{'color-black' : isViewOnly}" placeholder="Name"
                                                name="mappingSetName" required #mappingSetName="ngModel" id="mappingSetName">
                                        </md-input-container>
                                    </div>
                    
                                    <div class="col-md-3">
                                        <md-input-container>
                                            <input mdInput [(ngModel)]="mappingSet.description" [ngClass]="{'color-black' : isViewOnly}" placeholder="Description"
                                                name="mappingSetDescription" #mappingSetDescription="ngModel">
                                        </md-input-container>
                                    </div>
                    
                                    <div class="col-md-3">
                                        <md-form-field>
                                            <input mdInput [mdDatepicker]="mappingStpicker" placeholder="Start Date" [(ngModel)]="mappingSet.startDate" name="mappingSetStartDate" required>
                                            <md-datepicker-toggle mdSuffix [for]="mappingStpicker"></md-datepicker-toggle>
                                            <md-datepicker #mappingStpicker></md-datepicker>
                                        </md-form-field>
                                    </div>
                    
                                    <div class="col-md-3">
                                        <md-form-field>
                                            <input mdInput [mdDatepicker]="edpicker" placeholder="End Date" [min]="mappingSet.startDate" [(ngModel)]="mappingSet.endDate" name="endDate">
                                            <md-datepicker-toggle mdSuffix [for]="edpicker"></md-datepicker-toggle>
                                            <md-datepicker #edpicker></md-datepicker>
                                        </md-form-field>
                                    </div>
                                </div>
                                <!-- Value Set Values -->
                                <hr>
                                <div>
                                    <button md-icon-button class="color-yellow-green pull-right" mdTooltip="Add Values to Value Set" (click)="addRowValueSetValues()">
                                        <md-icon>exposure_plus_1</md-icon>
                                    </button>
                                    <div class="table-responsive">
                                        <perfect-scrollbar style="max-height:300px;">
                                        <table class="table tableView basicTable">
                                            <thead>
                                                <tr>
                                                    <th>Code</th>
                                                    <th>Value</th>
                                                    <th>Start Date</th>
                                                    <th>End Date</th>
                                                    <th>
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr *ngFor="let col of mappingSet.mappingSetValues; let i = index;" id="hideIconTable">
                                                    <td>
                                                        <md-input-container>
                                                            <input mdInput [(ngModel)]="col.sourceValue" required [ngModelOptions]="{standalone: true}" (blur)="checkCodeLength(col.sourceValue, i)" (keypress)="allowNumbersOnly($event)" (paste)="allowNumbersOnly($event)">
                                                        </md-input-container>
                                                    </td>
                                                    <td>
                                                        <md-input-container>
                                                            <input mdInput [(ngModel)]="col.targetValue" required [ngModelOptions]="{standalone: true}">
                                                        </md-input-container>
                                                    </td>
                                                    <td>
                                                        <md-form-field>
                                                            <input mdInput [mdDatepicker]="valueStpicker" [(ngModel)]="col.startDate" required [ngModelOptions]="{standalone: true}">
                                                            <md-datepicker-toggle mdSuffix [for]="valueStpicker"></md-datepicker-toggle>
                                                            <md-datepicker #valueStpicker></md-datepicker>
                                                        </md-form-field>
                                                    </td>
                                                    <td>
                                                        <md-form-field>
                                                            <input mdInput [mdDatepicker]="valueEdpicker" [min]="col.startDate" [ngClass]="{'color-black' : isViewOnly}" [(ngModel)]="col.endDate"
                                                                [ngModelOptions]="{standalone: true}">
                                                            <md-datepicker-toggle mdSuffix [for]="valueEdpicker"></md-datepicker-toggle>
                                                            <md-datepicker #valueEdpicker></md-datepicker>
                                                        </md-form-field>
                                                    </td>
                                                    <td>
                                                        <div class="display-flex pull-right" id="showIcon">
                                                            <button md-icon-button mdTooltip="Delete" (click)="deleteValueRow(i)">
                                                                <md-icon>delete</md-icon>
                                                            </button>
                                                        </div>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </perfect-scrollbar>
                                    </div>
                                </div>
                                <p-footer>
                                    <button type="button" pButton icon="fa-check" (click)="saveValueSet()" label="Save Value Set"></button>
                                </p-footer>
                            </p-dialog>
                        </div>
                    </div>
                </div>
            </div>
        <!-- </div>
    </vertical-split-pane> -->
</div>









<!-- 
<div *ngIf="chartOfAccount">
    <h2><span jhiTranslate="agreeGatewayV1App.chartOfAccount.detail.title">Chart Of Account</span> {{chartOfAccount.id}}</h2>
    <hr>
    <jhi-alert-error></jhi-alert-error>
    <dl class="row-md jh-entity-details">
        <dt><span jhiTranslate="agreeGatewayV1App.chartOfAccount.name">Name</span></dt>
        <dd>
            <span>{{chartOfAccount.name}}</span>
        </dd>
        <dt><span jhiTranslate="agreeGatewayV1App.chartOfAccount.description">Description</span></dt>
        <dd>
            <span>{{chartOfAccount.description}}</span>
        </dd>
        <dt><span jhiTranslate="agreeGatewayV1App.chartOfAccount.startDate">Start Date</span></dt>
        <dd>
            <span>{{chartOfAccount.startDate | date:'mediumDate'}}</span>
        </dd>
        <dt><span jhiTranslate="agreeGatewayV1App.chartOfAccount.endDate">End Date</span></dt>
        <dd>
            <span>{{chartOfAccount.endDate | date:'mediumDate'}}</span>
        </dd>
        <dt><span jhiTranslate="agreeGatewayV1App.chartOfAccount.segmentSeperator">Segment Seperator</span></dt>
        <dd>
            <span>{{chartOfAccount.segmentSeperator}}</span>
        </dd>
        <dt><span jhiTranslate="agreeGatewayV1App.chartOfAccount.enabledFlag">Enabled Flag</span></dt>
        <dd>
            <span>{{chartOfAccount.enabledFlag}}</span>
        </dd>
        <dt><span jhiTranslate="agreeGatewayV1App.chartOfAccount.createdBy">Created By</span></dt>
        <dd>
            <span>{{chartOfAccount.createdBy}}</span>
        </dd>
        <dt><span jhiTranslate="agreeGatewayV1App.chartOfAccount.createdDate">Created Date</span></dt>
        <dd>
            <span>{{chartOfAccount.createdDate | date:'medium'}}</span>
        </dd>
        <dt><span jhiTranslate="agreeGatewayV1App.chartOfAccount.lastUpdatedBy">Last Updated By</span></dt>
        <dd>
            <span>{{chartOfAccount.lastUpdatedBy}}</span>
        </dd>
        <dt><span jhiTranslate="agreeGatewayV1App.chartOfAccount.lastUpdatedDate">Last Updated Date</span></dt>
        <dd>
            <span>{{chartOfAccount.lastUpdatedDate | date:'medium'}}</span>
        </dd>
    </dl>

    <button type="submit"
            (click)="previousState()"
            class="btn btn-info">
        <span class="fa fa-arrow-left"></span>&nbsp;<span jhiTranslate="entity.action.back"> Back</span>
    </button>

    <button type="button"
            [routerLink]="['/', { outlets: { popup: 'chart-of-account/'+ chartOfAccount.id + '/edit'} }]"
            replaceUrl="true"
            class="btn btn-primary">
        <span class="fa fa-pencil"></span>&nbsp;<span jhiTranslate="entity.action.edit"> Edit</span>
    </button>
</div>
 -->