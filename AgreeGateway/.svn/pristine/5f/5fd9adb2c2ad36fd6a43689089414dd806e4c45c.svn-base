<div class="container-fluid  component-body">
	<div class="row botom-dotted-blue-border component-title">
		<div class="col-lg-9 col-md-9 col-sm-9 col-xs-9 pageTitle">
			<h2 *ngIf="!ruleGroupRulesAndConditions.name">New Rule Group</h2>
			<h2 *ngIf="ruleGroupRulesAndConditions.name">{{ruleGroupRulesAndConditions.name}}</h2>
		</div>
		<div class="col-lg-3 col-md-3 col-sm-3 col-xs-3" style="padding-top:22px;">
			<div class="float-right">
				<button md-icon-button class="pull-right color-green"
					*ngIf="!isViewOnly && f.valid && !duplicateRuleGroupName "
					aria-hidden="true" mdTooltip="Save Rule Group"
					(click)="saveRuleGroup()">
					<md-icon>save</md-icon>
				</button>
				<button *ngIf="!isViewOnly && (!f.valid  || duplicateRuleGroupName ) "
					md-icon-button class="pull-right color-gray" aria-hidden="true"
					mdTooltip="Fill mandatory fields " 
					(click)="validationMsg()">
					<md-icon>save</md-icon>
				</button>
				<button md-icon-button
					[routerLink]="['/rule-group', {outlets: {'content': [ruleGroupRulesAndConditions.id]+'/edit'}}]"
					*ngIf="isViewOnly" mdTooltip="Edit">
					<md-icon>mode_edit</md-icon>
				</button>
				<button md-icon-button class="pull-right color-gray"
					[routerLink]="['/rule-group', {outlets: {'content': [ruleGroupRulesAndConditions.id]+'/details'}}]"
					*ngIf="isEdit" mdTooltip="Close">
					<md-icon>clear</md-icon>
				</button>
				<button md-icon-button class="pull-right color-gray"
					[routerLink]="['/rule-group', {outlets: {'content': ['rule-group-home']}}]"
					*ngIf="isCreateNew" mdTooltip="Close">
					<md-icon>clear</md-icon>
				</button>
				<button md-icon-button
					[routerLink]="['/rule-group', {outlets: {'content': ['rule-group-home']}}]"
					*ngIf="isViewOnly" mdTooltip="Rule Group List">
					<md-icon>undo</md-icon>
				</button>
			</div>
		</div>
	</div>
	<form novalidate #f="ngForm">
		<div class="row">
			<div class="col-md-3" style="padding-top:10px;">
				<md-input-container>
				<input mdInput [(ngModel)]="ruleGroupRulesAndConditions.name"
					(ngModelChange)="checkGroupName(ruleGroupRulesAndConditions.name)"
					placeholder="Group Name" [ngClass]="{'color-black' : isViewOnly}"
					[disabled]="isViewOnly" name="name" required #name="ngModel">
				</md-input-container>
				<span class="help-block errorFont" style="margin-left: 32px;"
					*ngIf="duplicateRuleGroupName">Rule Group name already
					exists</span>
			</div>
			<div class="col-md-3" style="padding-top:10px;">
				<md-select placeholder="Group Type"
					[(ngModel)]="ruleGroupRulesAndConditions.rulePurpose"
					(change)="SelectRuleGroupType()"
					[ngClass]="{'color-black' : isViewOnly}" [disabled]="isViewOnly"
					name="ruleGroupType" required #ruleGroupType="ngModel">
				<md-option *ngFor="let type of ruleGroupTypes"
					[value]="type.lookUpCode"> {{ type.meaning}} </md-option> </md-select>
			</div>
			<div class="col-md-3" style="padding-top:10px;">
				<md-form-field> <input
					mdInput [mdDatepicker]="stpicker" placeholder="Start date"
					[ngClass]="{'color-black' : isViewOnly}" [disabled]="isViewOnly"
					[(ngModel)]="ruleGroupRulesAndConditions.startDate" name="startDate" required>
				<md-datepicker-toggle mdSuffix [for]="stpicker" *ngIf="!isViewOnly"></md-datepicker-toggle>
				<md-datepicker #stpicker></md-datepicker> </md-form-field>
			</div>
			<div class="col-md-3" style="padding-top:10px;" *ngIf="ruleGroupRulesAndConditions.startDate">
				<md-form-field> <input
					mdInput [mdDatepicker]="edpicker" placeholder="End date"
					[min]="ruleGroupRulesAndConditions.startDate"
					[ngClass]="{'color-black' : isViewOnly}" [disabled]="isViewOnly"
					[(ngModel)]="ruleGroupRulesAndConditions.endDate" name="endDate" > <md-datepicker-toggle
					mdSuffix [for]="edpicker" *ngIf="!isViewOnly"></md-datepicker-toggle>
				<md-datepicker #edpicker></md-datepicker> </md-form-field>
			</div>
			<!-- <div class="col-md-3 ">
				<md-input-container class="example-full-width">
				<input mdInput [mdDatepicker]="startDate" placeholder="Start Date"
					[ngClass]="{'color-black' : isViewOnly}" [disabled]="isViewOnly"
					[(ngModel)]="ruleGroupRulesAndConditions.startDate"
					name="startDate" required #startDate="ngModel">
				<button *ngIf="!isViewOnly" mdSuffix
					[mdDatepickerToggle]="startDate"></button>
				</md-input-container>
				<md-datepicker #startDate></md-datepicker>
			</div>
			<div class="col-md-3 ">
				<md-input-container class="example-full-width">
				<input mdInput [min]="ruleGroupRulesAndConditions.startDate"
					[mdDatepicker]="endDate" placeholder="End Date"
					[ngClass]="{'color-black' : isViewOnly}" [disabled]="isViewOnly"
					[(ngModel)]="ruleGroupRulesAndConditions.endDate" name="endDate"
					#endDate="ngModel">
				<button *ngIf="!isViewOnly" mdSuffix [mdDatepickerToggle]="endDate"></button>
				</md-input-container>
				<md-datepicker #endDate></md-datepicker>
			</div> -->
		</div>
		<!-- Reconciliation start -->
		<jhi-rule-group-reconciliation [accountingMode] = "view" *ngIf="ruleGroupRulesAndConditions.rulePurpose == 'RECONCILIATION' && isViewOnly"></jhi-rule-group-reconciliation>
		<jhi-rule-group-reconciliation [accountingMode] = "edit" *ngIf="ruleGroupRulesAndConditions.rulePurpose == 'RECONCILIATION' && isEdit"></jhi-rule-group-reconciliation>
		<jhi-rule-group-reconciliation [accountingMode] = "create" *ngIf="ruleGroupRulesAndConditions.rulePurpose == 'RECONCILIATION' && isCreateNew"></jhi-rule-group-reconciliation>
		
		<!-- Reconciliation End -->
		<!-- Accounting start -->
		<jhi-rule-group-accounting [accountingMode] = "view" *ngIf="ruleGroupRulesAndConditions.rulePurpose == 'ACCOUNTING' && isViewOnly"></jhi-rule-group-accounting>
		<jhi-rule-group-accounting [accountingMode] = "edit" *ngIf="ruleGroupRulesAndConditions.rulePurpose == 'ACCOUNTING' && isEdit"></jhi-rule-group-accounting>
		<jhi-rule-group-accounting [accountingMode] = "create" *ngIf="ruleGroupRulesAndConditions.rulePurpose == 'ACCOUNTING' && isCreateNew"></jhi-rule-group-accounting>
		 <!-- Accounting End -->
		 
		 <!-- Approvals Start -->
		 <jhi-rule-group-approvals [accountingMode] = "view" *ngIf="ruleGroupRulesAndConditions.rulePurpose == 'APPROVALS' && isViewOnly"></jhi-rule-group-approvals>
		 <jhi-rule-group-approvals [accountingMode] = "edit" *ngIf="ruleGroupRulesAndConditions.rulePurpose == 'APPROVALS' && isEdit"></jhi-rule-group-approvals>
		 <jhi-rule-group-approvals [accountingMode] = "create" *ngIf="ruleGroupRulesAndConditions.rulePurpose == 'APPROVALS' && isCreateNew"></jhi-rule-group-approvals>
		 <!-- Approvals End -->
		
		</form>
		<ngui-popup #popup></ngui-popup>
</div>