import { BaseEntity } from './../../shared';

export class Reconcile implements BaseEntity {
    constructor(
        public id?: number,
        public processorName?: string,
        public transactionDate?: any,
        public recordType?: string,
        public amount?: number,
        public currencyCode?: string,
    ) {

    }
}
export const ReconcileBreadCrumbTitles = {
    reconcile: 'Reconcile List',
    reconcileDetails: 'Reconcile Details',
    reconcileNew: 'Reconcile Creation',
    reconcileEdit: 'Edit Reconcile'
}
export class ReportTypeRecords {
    constructor(
        public noOfRecords?: number,
        public reportName?: string,
        public reportType?: string,
        public status?: boolean,
        public hidden?: boolean,
        public headerName?: string,
    ) {
    }
}


export class ReconciliationRecords {
    constructor(
        public id?: number,
        public groupName?: string,
        public label?: any[],
        public source?: SourceReconciliationLines[],
        public type?: string,
        public target?: TargetReconciliationLines[],
        public info?:any
    ) {
    }
}

export class SourceReconciliationLines {
    constructor(
        public total?: any,
        public viewId?: number,
        public reconciled?: any,
        public viewName?: string,
        public unReconciled?: any,
        public target?: any[],

    ) {
    }
}


export class TargetReconciliationLines {
    constructor(
        public total?: any,
        public viewId?: number,
        public reconciled?: any,
        public viewName?: string,
        public unReconciled?: any

    ) {
    }
}

export class customFilters {
    constructor(
        public tenantId?:any,
        public filterColumns?:any[],
        public limit?: number,
        public page?: number,
        public sourceOrTarget?: string,
        public status?: string,
        public viewId?: any,
        public groupId?:any
    ){

    }
}

export class SfilterColumns {
    constructor(
        public columnName?:string,
        public operator?:string,
        public columnValue?:string,
        public columnName1?:string,
        public operator1?:string,             
    ){

    }
}
// export class filteringData {
//     constructor(
//         public columnName?:string,
//         public operator?:string,
//         public columnValue?:string          
//     ){

//     }
// }

export class TfilterColumns {
    constructor(
        public columnName?:string,
        public operator?:string,
        public columnValue?:string,
        public columnName1?:string,
        public operator1?:string,             
    ){

    }
}

export class selectedReconciledIds{
    constructor(
        public source?:reconcileIdsforSource[],
        public target?:reconcileIdsforTarget[]
    ){

    }
}

export class reconcileIdsforSource{
    constructor(
        public groupId?:any,
        public rowId?:any,
        public viewId?:any
    ){

    }
}

export class reconcileIdsforTarget{
    constructor(
        public groupId?:any,
        public rowId?:any,
        public viewId?:any
    ){

    }
}