package com.nspl.app.domain;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.springframework.data.elasticsearch.annotations.Document;

import javax.persistence.*;
import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.Objects;

/**
 * A Reconcile.
 */
@Entity
@Table(name = "reconcile")
@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
@Document(indexName = "reconcile")
public class Reconcile implements Serializable {

    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column(name = "processor_name")
    private String processorName;

    @Column(name = "transaction_date")
    private LocalDate transactionDate;

    @Column(name = "record_type")
    private String recordType;

    @Column(name = "amount", precision=10, scale=2)
    private BigDecimal amount;

    @Column(name = "currency_code")
    private String currencyCode;

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getProcessorName() {
        return processorName;
    }

    public Reconcile processorName(String processorName) {
        this.processorName = processorName;
        return this;
    }

    public void setProcessorName(String processorName) {
        this.processorName = processorName;
    }

    public LocalDate getTransactionDate() {
        return transactionDate;
    }

    public Reconcile transactionDate(LocalDate transactionDate) {
        this.transactionDate = transactionDate;
        return this;
    }

    public void setTransactionDate(LocalDate transactionDate) {
        this.transactionDate = transactionDate;
    }

    public String getRecordType() {
        return recordType;
    }

    public Reconcile recordType(String recordType) {
        this.recordType = recordType;
        return this;
    }

    public void setRecordType(String recordType) {
        this.recordType = recordType;
    }

    public BigDecimal getAmount() {
        return amount;
    }

    public Reconcile amount(BigDecimal amount) {
        this.amount = amount;
        return this;
    }

    public void setAmount(BigDecimal amount) {
        this.amount = amount;
    }

    public String getCurrencyCode() {
        return currencyCode;
    }

    public Reconcile currencyCode(String currencyCode) {
        this.currencyCode = currencyCode;
        return this;
    }

    public void setCurrencyCode(String currencyCode) {
        this.currencyCode = currencyCode;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Reconcile reconcile = (Reconcile) o;
        if (reconcile.id == null || id == null) {
            return false;
        }
        return Objects.equals(id, reconcile.id);
    }

    @Override
    public int hashCode() {
        return Objects.hashCode(id);
    }

    @Override
    public String toString() {
        return "Reconcile{" +
            "id=" + id +
            ", processorName='" + processorName + "'" +
            ", transactionDate='" + transactionDate + "'" +
            ", recordType='" + recordType + "'" +
            ", amount='" + amount + "'" +
            ", currencyCode='" + currencyCode + "'" +
            '}';
    }
}
