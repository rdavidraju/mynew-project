package com.nspl.app.service;

import java.io.BufferedWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;

import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVPrinter;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;

import com.nspl.app.web.rest.ReportsResource;


@Service
public class FileExportService {
	
	 private final Logger log = LoggerFactory.getLogger(ReportsResource.class);
	
	  public void jsonToCSV(List<LinkedHashMap> values,List<String> keysList,PrintWriter writer) throws IOException
	  { 	
		  log.info("keysList :"+keysList);
		/*  String commaSeparated = keysList.stream()
				  .collect(Collectors.joining(","));

		  log.info("commaSeparated :"+commaSeparated);*/

		  try (

				  CSVPrinter csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT
						  );
				  ) {
			  csvPrinter.printRecord(keysList);
			  log.info("values.get(0): "+values.get(0));
			  for(int j=0;j<values.size();j++)
			  {
				  List<String> valuesList=new ArrayList<String>();
				  for(String hea:keysList)
				  {
					  //log.info("hea: "+hea);
					  if(values.get(j).containsKey(hea)){
						  //  log.info("values.get(j).get(hea): "+values.get(j).get(hea));
						  if(values.get(j).get(hea)!=null)
							  valuesList.add(values.get(j).get(hea).toString());
						  else
							  valuesList.add("");
					  }
					  else{
						  valuesList.add("");
					  }
				  }

				  /*  commaSeparated=valuesList.stream()
						  .collect(Collectors.joining(","));*/

				  csvPrinter.printRecord(valuesList);
			  }
			  csvPrinter.flush(); 
			  csvPrinter.close();
		  }


	  }
	  
	  public void jsonToCSVForReports(List<HashMap> values,List<String> keysList,PrintWriter writer) throws IOException
	  { 	
		  log.info("keysList :"+keysList);
		/*  String commaSeparated = keysList.stream()
				  .collect(Collectors.joining(","));

		  log.info("commaSeparated :"+commaSeparated);*/

		  try (

				  CSVPrinter csvPrinter = new CSVPrinter(writer, CSVFormat.DEFAULT
						  );
				  ) {
			  csvPrinter.printRecord(keysList);
			  log.info("values.get(0): "+values.get(0));
			  for(int j=0;j<values.size();j++)
			  {
				  List<String> valuesList=new ArrayList<String>();
				  for(String hea:keysList)
				  {
					  //log.info("hea: "+hea);
					  if(values.get(j).containsKey(hea)){
						  //  log.info("values.get(j).get(hea): "+values.get(j).get(hea));
						  if(values.get(j).get(hea)!=null)
							  valuesList.add(values.get(j).get(hea).toString());
						  else
							  valuesList.add("");
					  }
					  else{
						  valuesList.add("");
					  }
				  }

				  /*  commaSeparated=valuesList.stream()
						  .collect(Collectors.joining(","));*/

				  csvPrinter.printRecord(valuesList);
			  }
			  csvPrinter.flush(); 
			  csvPrinter.close();
		  }


	  }

}
