# ===================================================================
# Spring Boot configuration for the "prod" profile.
#
# This configuration overrides the application.yml file.
#
# More information on profiles: https://jhipster.github.io/profiles/
# More information on configuration properties: https://jhipster.github.io/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

eureka:
    instance:
        prefer-ip-address: true
    client:
        service-url:
            defaultZone: http://admin:${jhipster.registry.password}@localhost:8761/eureka/

spring:
    profiles:
        active: prod44
        include: swagger
    devtools:
        restart:
            enabled: false
        livereload:
            enabled: false
    datasource:
        type: com.zaxxer.hikari.HikariDataSource
        url: jdbc:mysql://192.168.0.44:3306/agree_app_beta_0529?useUnicode=true&characterEncoding=utf8&useSSL=false
        databaseName: agree_app_beta_0529
        dataSourceClassName: com.mysql.jdbc.jdbc2.optional.MysqlDataSource
        serverName: localhost
        applicationHost: 192.168.0.44
        username: recon_beta2
        password: Welcome321$
        jdbcdriver: com.mysql.jdbc.Driver
        gatewayschema: agree_gateway_beta_0529
        gatewayUrl: jdbc:mysql://192.168.0.44:3306/agree_gateway_beta_0529?useUnicode=true&characterEncoding=utf8&useSSL=false
        gatewayUserName: recon_beta2
        gatewayPassword: Welcome321$
        gatewayPort: 8763
        hikari:
            data-source-properties:
                cachePrepStmts: true
                prepStmtCacheSize: 250
                prepStmtCacheSqlLimit: 2048
                useServerPrepStmts: true
    secondDatasource:
        url: jdbc:mysql://192.168.0.44:3306/agree_gateway_beta_0529?useUnicode=true&characterEncoding=utf8&useSSL=false
        databaseName: agree_gateway_beta_0529
        dataSourceClassName: com.mysql.jdbc.jdbc2.optional.MysqlDataSource
        serverName: 192.168.0.44
        username: recon_beta2
        password: Welcome321$  
    jpa:
        database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
        database: MYSQL
        show-sql: false
        properties:
            hibernate.id.new_generator_mappings: true
            hibernate.cache.use_second_level_cache: true
            hibernate.cache.use_query_cache: false
            hibernate.generate_statistics: false
            hibernate.cache.region.factory_class: com.hazelcast.hibernate.HazelcastCacheRegionFactory
            hibernate.cache.hazelcast.instance_name: agreeApplication
            hibernate.cache.use_minimal_puts: true
            hibernate.cache.hazelcast.use_lite_member: true
    data:
        elasticsearch:
            cluster-name: elasticsearch
            cluster-nodes: 192.168.0.44:9300
#          properties:
#               path:
#                  logs: target/elasticsearch/log
#                  data: target/elasticsearch/data
    mail:
        host: smtp.gmail.com
        port: 587
        username: nspl.recon@gmail.com
        password: Welcome!23
        protocol: smtp
        tls: true
        auth: true
        from: nspl.recon@gmail.com
        properties.mail.smtp:
            auth: true
            starttls.enable: true
            ssl.trust: smtp.gmail.com
    thymeleaf:
        cache: true
    http:
        multipart:
            max-file-size: -1
    hadoop:
        config:
              fs:
                defaultFS: hdfs://192.168.0.155:9000
        resourceManagerHost: 192.168.0.155
        resourceManagerPort: 8032

liquibase:
    contexts: prod

# ===================================================================
# To enable SSL, generate a certificate using:
# keytool -genkey -alias agreeApplication -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore keystore.p12 -validity 3650
#
# You can also use Let's Encrypt:
# https://maximilian-boehm.com/hp2121/Create-a-Java-Keystore-JKS-from-Let-s-Encrypt-Certificates.htm
#
# Then, modify the server.ssl properties so your "server" configuration looks like:
#
# server:
#    port: 443
#    ssl:
#        key-store: keystore.p12
#        key-store-password: <your-password>
#        keyStoreType: PKCS12
#        keyAlias: agreeApplication
# ===================================================================
server:
    port: 8082
    compression:
        enabled: true
        mime-types: text/html,text/xml,text/plain,text/css, application/javascript, application/json
        min-response-size: 1024

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://jhipster.github.io/common-application-properties/
# ===================================================================

jhipster:
    http:
        version: V_1_1 # To use HTTP/2 you will need SSL support (see above the "server.ssl" configuration)
        cache: # Used by the CachingHttpHeadersFilter
            timeToLiveInDays: 1461
    cache: # Cache configuration
        hazelcast: # Hazelcast distributed cache
            time-to-live-seconds: 3600
            backup-count: 1
    security:
        authentication:
            jwt:
                secret: e70efad401ec1d2a180d757a43d8f5c2d53b9c13
                # Token is valid 24 hours
                token-validity-in-seconds: 86400
                token-validity-in-seconds-for-remember-me: 2592000
    mail: # specific JHipster mail property, for standard properties see MailProperties
        from: agreeApplication@localhost
        base-url: http://my-server-url-to-change # Modify according to your server's URL
    metrics: # DropWizard Metrics configuration, used by MetricsConfiguration
        jmx.enabled: true
        graphite:
            enabled: false
            host: localhost
            port: 2003
            prefix: agreeApplication
        prometheus:
            enabled: false
            endpoint: /prometheusMetrics
        logs: # Reports Dropwizard metrics in the logs
            enabled: false
            report-frequency: 60 # in seconds
    logging:
        logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
            enabled: false
            host: localhost
            port: 5000
            queue-size: 512
        spectator-metrics: # Reports Spectator Circuit Breaker metrics in the logs
            enabled: false
            # edit spring.metrics.export.delay-millis to set report frequency

# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://jhipster.github.io/common-application-properties/
# ===================================================================
oozie:
     jobTracker: qat.nspl.com:8032
     nameNode: hdfs://qat.nspl.com:9000
     queueName: default
     OozieClient: http://qat.nspl.com:11000/oozie/
     libpath : /user/hdsingle/share/lib/lib_20170620125411
     ozieUrl: jdbc:mysql://192.168.0.155/oozie
     ozieUser: oozie
     oziePswd: oozie
     ozieSchema: oozie
     hadoopRootUser: hdsingle
     
baseDirectories:
     linuxBaseDir: /home/aniya
     hadoopBaseDir: /user/hdsingle/prod

dataExtraction:
     user: sparkhadoopcl
     password: sparkhadoopcl
     host: 192.168.0.145
     port: 22
     basePath: /home/sparkhadoopcl/FilesTransfered	           
         
application: