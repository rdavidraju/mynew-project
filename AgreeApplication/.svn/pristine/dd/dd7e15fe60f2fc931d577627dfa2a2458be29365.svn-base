package com.nspl.app.repository;

import java.math.BigInteger;
import java.util.List;

import com.nspl.app.domain.Reports;

import org.springframework.stereotype.Repository;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.*;
import org.springframework.data.repository.query.Param;


/**
 * Spring Data JPA repository for the Reports entity.
 */
@SuppressWarnings("unused")
@Repository
public interface ReportsRepository extends JpaRepository<Reports,Long> {
					 
	@Query(value = "select id from t_reports where tenant_id=:tenantId order by id desc",nativeQuery=true)
	List<BigInteger> fectchActiveReportsByTenantId(@Param("tenantId") Long tenantId);
	
	@Query(value = "select count(*) from t_reports where tenant_id= :tenantId and report_name= :report_name",nativeQuery=true)
	Long fetchReportNameCount(@Param("tenantId") Long tenantId, @Param("report_name") String report_name);
	
	Reports findByTenantIdAndReportName(Long tenanatId, String reportNama);
	
	Page<Reports> findByTenantIdOrderByIdDesc(Long tenantId, Pageable pageable);
	
	@Query(value = "select report_name from t_reports where tenant_id=:tenantId and enable_flag is true order by id desc",nativeQuery=true)
	List<String> fectchActiveReportNamesByTenantId(@Param("tenantId") Long tenantId);
	
	@Query(value = "select id from t_reports where tenant_id=:tenantId and report_type_id=:report_type_id order by id desc",nativeQuery=true)
	List<BigInteger> fectchActiveReportsByTenantIdAndReportTypeId(@Param("tenantId") Long tenantId,@Param("report_type_id") Long report_type_id);
	
	Page<Reports> findByTenantIdAndIdIn(Long tenantId,List<Long>ids, Pageable pageable);

	List<Reports> findByReportTypeId(Long id);

	List<Reports> findByTenantIdAndIdIn(Long tenantId,
			List<Long> reportIdLongList);

	Reports findByTenantIdAndIdForDisplay(Long tenantId, String reportId);
	
}
