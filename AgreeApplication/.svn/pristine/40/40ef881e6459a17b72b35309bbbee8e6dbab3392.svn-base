package com.nspl.app.domain;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

import javax.persistence.*;
import java.io.Serializable;
import java.math.BigDecimal;
import java.time.ZonedDateTime;
import java.util.Objects;

/**
 * A JeLines.
 */
@Entity
@Table(name = "t_je_lines")
@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
public class JeLines implements Serializable {

    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column(name = "je_batch_id")
    private Long jeBatchId;

    @Column(name = "row_id")
    private Long rowId;

    @Column(name = "line_num")
    private Integer lineNum;

    @Column(name = "description_attribute")
    private String descriptionAttribute;

    @Column(name = "currency")
    private String currency;

    @Column(name = "debit_amount", precision=10, scale=2)
    private BigDecimal debitAmount;

    @Column(name = "credit_amount", precision=10, scale=2)
    private BigDecimal creditAmount;

    @Column(name = "accounted_debit", precision=10, scale=2)
    private BigDecimal accountedDebit;

    @Column(name = "accounted_credit", precision=10, scale=2)
    private BigDecimal accountedCredit;

    @Column(name = "comments")
    private String comments;

    @Column(name = "created_by")
    private Long createdBy;

    @Column(name = "last_updated_by")
    private Long lastUpdatedBy;

    @Column(name = "created_date")
    private ZonedDateTime createdDate;

    @Column(name = "last_updated_date")
    private ZonedDateTime lastUpdatedDate;

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Long getJeBatchId() {
        return jeBatchId;
    }

    public JeLines jeBatchId(Long jeBatchId) {
        this.jeBatchId = jeBatchId;
        return this;
    }

    public void setJeBatchId(Long jeBatchId) {
        this.jeBatchId = jeBatchId;
    }

    public Long getRowId() {
        return rowId;
    }

    public JeLines rowId(Long rowId) {
        this.rowId = rowId;
        return this;
    }

    public void setRowId(Long rowId) {
        this.rowId = rowId;
    }

    public Integer getLineNum() {
        return lineNum;
    }

    public JeLines lineNum(Integer lineNum) {
        this.lineNum = lineNum;
        return this;
    }

    public void setLineNum(Integer lineNum) {
        this.lineNum = lineNum;
    }

    public String getDescriptionAttribute() {
        return descriptionAttribute;
    }

    public JeLines descriptionAttribute(String descriptionAttribute) {
        this.descriptionAttribute = descriptionAttribute;
        return this;
    }

    public void setDescriptionAttribute(String descriptionAttribute) {
        this.descriptionAttribute = descriptionAttribute;
    }

    public String getCurrency() {
        return currency;
    }

    public JeLines currency(String currency) {
        this.currency = currency;
        return this;
    }

    public void setCurrency(String currency) {
        this.currency = currency;
    }

    public BigDecimal getDebitAmount() {
        return debitAmount;
    }

    public JeLines debitAmount(BigDecimal debitAmount) {
        this.debitAmount = debitAmount;
        return this;
    }

    public void setDebitAmount(BigDecimal debitAmount) {
        this.debitAmount = debitAmount;
    }

    public BigDecimal getCreditAmount() {
        return creditAmount;
    }

    public JeLines creditAmount(BigDecimal creditAmount) {
        this.creditAmount = creditAmount;
        return this;
    }

    public void setCreditAmount(BigDecimal creditAmount) {
        this.creditAmount = creditAmount;
    }

    public BigDecimal getAccountedDebit() {
        return accountedDebit;
    }

    public JeLines accountedDebit(BigDecimal accountedDebit) {
        this.accountedDebit = accountedDebit;
        return this;
    }

    public void setAccountedDebit(BigDecimal accountedDebit) {
        this.accountedDebit = accountedDebit;
    }

    public BigDecimal getAccountedCredit() {
        return accountedCredit;
    }

    public JeLines accountedCredit(BigDecimal accountedCredit) {
        this.accountedCredit = accountedCredit;
        return this;
    }

    public void setAccountedCredit(BigDecimal accountedCredit) {
        this.accountedCredit = accountedCredit;
    }

    public String getComments() {
        return comments;
    }

    public JeLines comments(String comments) {
        this.comments = comments;
        return this;
    }

    public void setComments(String comments) {
        this.comments = comments;
    }

    public Long getCreatedBy() {
        return createdBy;
    }

    public JeLines createdBy(Long createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    public void setCreatedBy(Long createdBy) {
        this.createdBy = createdBy;
    }

    public Long getLastUpdatedBy() {
        return lastUpdatedBy;
    }

    public JeLines lastUpdatedBy(Long lastUpdatedBy) {
        this.lastUpdatedBy = lastUpdatedBy;
        return this;
    }

    public void setLastUpdatedBy(Long lastUpdatedBy) {
        this.lastUpdatedBy = lastUpdatedBy;
    }

    public ZonedDateTime getCreatedDate() {
        return createdDate;
    }

    public JeLines createdDate(ZonedDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }

    public void setCreatedDate(ZonedDateTime createdDate) {
        this.createdDate = createdDate;
    }

    public ZonedDateTime getLastUpdatedDate() {
        return lastUpdatedDate;
    }

    public JeLines lastUpdatedDate(ZonedDateTime lastUpdatedDate) {
        this.lastUpdatedDate = lastUpdatedDate;
        return this;
    }

    public void setLastUpdatedDate(ZonedDateTime lastUpdatedDate) {
        this.lastUpdatedDate = lastUpdatedDate;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        JeLines jeLines = (JeLines) o;
        if (jeLines.id == null || id == null) {
            return false;
        }
        return Objects.equals(id, jeLines.id);
    }

    @Override
    public int hashCode() {
        return Objects.hashCode(id);
    }

    @Override
    public String toString() {
        return "JeLines{" +
            "id=" + id +
            ", jeBatchId='" + jeBatchId + "'" +
            ", rowId='" + rowId + "'" +
            ", lineNum='" + lineNum + "'" +
            ", descriptionAttribute='" + descriptionAttribute + "'" +
            ", currency='" + currency + "'" +
            ", debitAmount='" + debitAmount + "'" +
            ", creditAmount='" + creditAmount + "'" +
            ", accountedDebit='" + accountedDebit + "'" +
            ", accountedCredit='" + accountedCredit + "'" +
            ", comments='" + comments + "'" +
            ", createdBy='" + createdBy + "'" +
            ", lastUpdatedBy='" + lastUpdatedBy + "'" +
            ", createdDate='" + createdDate + "'" +
            ", lastUpdatedDate='" + lastUpdatedDate + "'" +
            '}';
    }
}
