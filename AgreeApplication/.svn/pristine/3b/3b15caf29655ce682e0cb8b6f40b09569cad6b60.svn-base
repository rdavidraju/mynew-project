package com.nspl.app.domain;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.springframework.data.elasticsearch.annotations.Document;

import javax.persistence.*;

import java.io.Serializable;
import java.time.ZonedDateTime;
import java.util.Objects;

/**
 * A AccountedSummary.
 */
@Entity
@Table(name = "t_accounted_summary")
@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
@Document(indexName = "accountedsummary")
public class AccountedSummary implements Serializable {

    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column(name = "view_id")
    private Long viewId;
    
    @Column(name = "row_id")
    private Long rowId;
    
    @Column(name = "rule_group_id")
    private Long ruleGroupId;

    @Column(name = "rule_id")
    private Long ruleId;
    
    @Column(name = "debit_count")
    private Integer debitCount;

    @Column(name = "credit_count")
    private Integer creditCount;

    @Column(name = "status")
    private String status;

    @Column(name = "type")
    private String type;
    
    @Column(name = "current_record_flag")
    private Boolean currentRecordFlag;
    
    public String getType() {
		return type;
	}

	public void setType(String type) {
		this.type = type;
	}

	public Boolean getCurrentRecordFlag() {
		return currentRecordFlag;
	}

	public void setCurrentRecordFlag(Boolean currentRecordFlag) {
		this.currentRecordFlag = currentRecordFlag;
	}
	
	@Column(name = "je_batch_id")
    private Long jeBatchId;
	
	@Column(name = "journal_status")
    private String journalStatus;
    
    @Column(name = "approval_status")
    private String approvalStatus;
    
    @Column(name = "job_reference")
    private String jobReference;

    @Column(name = "created_by")
    private Long createdBy;

    @Column(name = "created_date")
    private ZonedDateTime createdDate;

    @Column(name = "last_updated_by")
    private Long lastUpdatedBy;

    @Column(name = "last_updated_date")
    private ZonedDateTime lastUpdatedDate;
    
    
    public Long getViewId() {
		return viewId;
	}

	public void setViewId(Long viewId) {
		this.viewId = viewId;
	}

	public Long getRuleGroupId() {
		return ruleGroupId;
	}

	public void setRuleGroupId(Long ruleGroupId) {
		this.ruleGroupId = ruleGroupId;
	}

	public Long getRowId() {
		return rowId;
	}

	public void setRowId(Long rowId) {
		this.rowId = rowId;
	}

	public Long getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(Long createdBy) {
		this.createdBy = createdBy;
	}

	public ZonedDateTime getCreatedDate() {
		return createdDate;
	}

	public void setCreatedDate(ZonedDateTime createdDate) {
		this.createdDate = createdDate;
	}

	public Long getLastUpdatedBy() {
		return lastUpdatedBy;
	}

	public void setLastUpdatedBy(Long lastUpdatedBy) {
		this.lastUpdatedBy = lastUpdatedBy;
	}

	public ZonedDateTime getLastUpdatedDate() {
		return lastUpdatedDate;
	}

	public void setLastUpdatedDate(ZonedDateTime lastUpdatedDate) {
		this.lastUpdatedDate = lastUpdatedDate;
	}

	public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Long getRuleId() {
        return ruleId;
    }

    public AccountedSummary ruleId(Long ruleId) {
        this.ruleId = ruleId;
        return this;
    }

    public void setRuleId(Long ruleId) {
        this.ruleId = ruleId;
    }

    public Integer getDebitCount() {
        return debitCount;
    }

    public AccountedSummary debitCount(Integer debitCount) {
        this.debitCount = debitCount;
        return this;
    }

    public void setDebitCount(Integer debitCount) {
        this.debitCount = debitCount;
    }

    public Integer getCreditCount() {
        return creditCount;
    }

    public AccountedSummary creditCount(Integer creditCount) {
        this.creditCount = creditCount;
        return this;
    }

    public void setCreditCount(Integer creditCount) {
        this.creditCount = creditCount;
    }

    public String getStatus() {
        return status;
    }

    public AccountedSummary status(String status) {
        this.status = status;
        return this;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public String getJournalStatus() {
		return journalStatus;
	}

	public void setJournalStatus(String journalStatus) {
		this.journalStatus = journalStatus;
	}

	public String getApprovalStatus() {
		return approvalStatus;
	}

	public void setApprovalStatus(String approvalStatus) {
		this.approvalStatus = approvalStatus;
	}

	public String getJobReference() {
		return jobReference;
	}

	public void setJobReference(String jobReference) {
		this.jobReference = jobReference;
	}

	public Long getJeBatchId() {
		return jeBatchId;
	}

	public void setJeBatchId(Long jeBatchId) {
		this.jeBatchId = jeBatchId;
	}

	@Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AccountedSummary accountedSummary = (AccountedSummary) o;
        if (accountedSummary.id == null || id == null) {
            return false;
        }
        return Objects.equals(id, accountedSummary.id);
    }

    @Override
    public int hashCode() {
        return Objects.hashCode(id);
    }

    @Override
	public String toString() {
		return "AccountedSummary [id=" + id + ", viewId=" + viewId + ", rowId="
				+ rowId + ", ruleGroupId=" + ruleGroupId + ", ruleId=" + ruleId
				+ ", debitCount=" + debitCount + ", creditCount=" + creditCount
				+ ", status=" + status + ", type=" + type
				+ ", currentRecordFlag=" + currentRecordFlag + ", jeBatchId="
				+ jeBatchId + ", journalStatus=" + journalStatus
				+ ", approvalStatus=" + approvalStatus + ", jobReference="
				+ jobReference + ", createdBy=" + createdBy + ", createdDate="
				+ createdDate + ", lastUpdatedBy=" + lastUpdatedBy
				+ ", lastUpdatedDate=" + lastUpdatedDate + "]";
	}
}
