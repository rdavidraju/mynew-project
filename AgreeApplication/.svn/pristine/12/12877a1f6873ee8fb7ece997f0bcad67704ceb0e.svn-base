package com.nspl.app.repository;

import com.nspl.app.domain.SchedulerDetails;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.*;
import org.springframework.data.repository.query.Param;

import java.util.List;

/**
 * Spring Data JPA repository for the SchedulerDetails entity.
 */
@SuppressWarnings("unused")
public interface SchedulerDetailsRepository extends JpaRepository<SchedulerDetails,Long> {

	List<SchedulerDetails> findByJobId(Long id);
	
	
	
	@Query(value =  "SELECT oozie_job_id FROM t_scheduler_details where job_id= :jobId",nativeQuery=true)
	List<String> fetchOzieJobIdsByJobId(@Param("jobId") Long jobId);

	SchedulerDetails findBySchedulerName(String jobName);

	
	@Query(value =  "SELECT * FROM t_scheduler_details where job_id in (select id from t_job_details where tenant_id= :tenantId) and oozie_job_id= :oozieJobId",nativeQuery=true)
	SchedulerDetails findByOozieJobIdAndTenantID(@Param("tenantId")Long tenantId,@Param("oozieJobId") String oozieJobId);


	//@Query(value =  "FROM SchedulerDetails where jobId in (select id from JobDetails where tenantId= :tenantId) order by lastUpdatedDate desc",nativeQuery=false)
//	Page<SchedulerDetails> fetchSchedulersByJobId(Long tenantId,Pageable generatePageRequest2);
	
	@Query(value =  "SELECT * FROM t_scheduler_details where job_id in (select id from t_job_details where tenant_id= :tenantId) order by last_updated_date desc",nativeQuery=true)
	List<SchedulerDetails> fetchSchedulersByJobId(@Param("tenantId")Long tenantId);

	
	@Query(value =  "SELECT * FROM t_scheduler_details where job_id= :id and delete_flag is null",nativeQuery=true)
	List<SchedulerDetails> findByJobIdAndDeleteFlagIsNull(@Param("id") Long id);


}
