package com.nspl.app.repository;

import com.nspl.app.domain.RuleGroup;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.*;
import org.springframework.data.repository.query.Param;

import java.math.BigInteger;
import java.util.List;

/**
 * Spring Data JPA repository for the RuleGroup entity.
 */
@SuppressWarnings("unused")
public interface RuleGroupRepository extends JpaRepository<RuleGroup,Long> {

	List<RuleGroup> findByTenantIdOrderByIdDesc(Long tenantId);

	Page<RuleGroup> findByTenantIdOrderByIdDesc(Long tenantId, Pageable generatePageRequest2);

	
	@Query(value =  "SELECT ID FROM t_rule_group where rule_purpose= :rulePurpose and tenant_id=:tenantId and enabled_flag is true",nativeQuery=true)
	List<Long> fetchIdsByTenantIdAndRulePurpose(@Param("tenantId") Long tenantId,@Param("rulePurpose") String rulePurpose);
	
	/*@Query(value =  "SELECT ID FROM t_rule_group where rule_purpose= :rulePurpose and tenant_id=:tenantId ",nativeQuery=true)
	List<BigInteger> fetchRuleGrpIdsByTenantIdAndRulePurpose(@Param("tenantId") Long tenantId,@Param("rulePurpose") String rulePurpose);*/
	
	RuleGroup findByTenantIdAndName(Long tenanatId, String groupName);
	
	//shiva
	RuleGroup findByTenantIdAndNameAndRulePurpose(Long tenanatId, String groupName, String rulePurpose);
	
	RuleGroup findByTenantIdAndIdAndRulePurpose(Long tenanatId, Long ruleId, String rulePurpose);

	//for orphan rules
	RuleGroup findByTenantIdAndRulePurpose(Long tenantId, String purpose);
	
	@Query(value =  "SELECT * FROM t_rule_group where rule_purpose= :rulePurpose and tenant_id=:tenantId order by name asc ",nativeQuery=true)
	List<RuleGroup> fetchByTenantIdAndRulePurpose(@Param("tenantId") Long tenantId,@Param("rulePurpose") String rulePurpose);

	@Query(value = "select distinct(rule_purpose) FROM t_rule_group where tenant_id= :tenantId",nativeQuery=true)
	List<String> findDistRulePurposeByTenantId(@Param("tenantId") Long tenantId);

}
