<?xml version="1.0" encoding="utf-8"?>
<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd
                        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

    <property name="now" value="now()" dbms="h2"/>

    <property name="now" value="now()" dbms="mysql"/>
    <property name="autoIncrement" value="true"/>

    <property name="floatType" value="float4" dbms="postgresql, h2"/>
    <property name="floatType" value="float" dbms="mysql, oracle, mssql"/>

    <!--
        Added the entity ReconciliationResult.
    -->
    <changeSet id="20170829052924-1" author="jhipster">
        <createTable tableName="t_reconciliation_result">
            <column name="id" type="bigint" autoIncrement="${autoIncrement}">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="original_row_id" type="bigint">
                <constraints nullable="true" />
            </column>

            <column name="original_view_id" type="bigint">
                <constraints nullable="true" />
            </column>

            <column name="original_view" type="varchar(255)">
                <constraints nullable="true" />
            </column>

            <column name="target_row_id" type="bigint">
                <constraints nullable="true" />
            </column>

            <column name="target_view_id" type="bigint">
                <constraints nullable="true" />
            </column>

            <column name="target_view" type="varchar(255)">
                <constraints nullable="true" />
            </column>

            <column name="recon_reference" type="varchar(255)">
                <constraints nullable="true" />
            </column>

            <column name="reconciliation_rule_name" type="varchar(255)">
                <constraints nullable="true" />
            </column>

            <column name="reconciliation_rule_id" type="bigint">
                <constraints nullable="true" />
            </column>

            <column name="reconciliation_user_id" type="bigint">
                <constraints nullable="true" />
            </column>

            <column name="recon_job_reference" type="varchar(255)">
                <constraints nullable="true" />
            </column>

            <column name="reconciled_date" type="timestamp">
                <constraints nullable="true" />
            </column>

            <column name="tenant_id" type="bigint">
                <constraints nullable="true" />
            </column>

            <!-- jhipster-needle-liquibase-add-column - JHipster will add columns here, do not remove-->
        </createTable>
        <dropDefaultValue tableName="t_reconciliation_result" columnName="reconciled_date" columnDataType="datetime"/>
        
    </changeSet>
    
    <changeSet author="jagan" id="addColumnGroupIdInReconResult">
    <addColumn 
            tableName="t_reconciliation_result">
        <column name="reconciliation_rule_group_id" type="bigint" afterColumn="reconciliation_rule_name"/>
    </addColumn>
	</changeSet>
	
	 <changeSet author="Swetha" id="addColumnsForAppHistory-6">
     <addColumn 
            tableName="t_reconciliation_result">
        <column name="approval_group_id" type="bigint" />
    </addColumn>
     <addColumn 
            tableName="t_reconciliation_result">
        <column name="approval_rule_id" type="bigint" />
    </addColumn>
     <addColumn 
            tableName="t_reconciliation_result">
        <column name="approval_initiation_date" type="timestamp" />
    </addColumn>
        <addColumn 
            tableName="t_reconciliation_result">
        <column name="approval_batch_id" type="bigint" />
    </addColumn>
    <addColumn 
            tableName="t_reconciliation_result">
        <column name="appr_ref_01" type="varchar(255)"/>
    </addColumn>
    <addColumn 
            tableName="t_reconciliation_result">
        <column name="appr_ref_02" type="varchar(255)"/>
    </addColumn>
    <addColumn 
            tableName="t_reconciliation_result">
        <column name="appr_ref_03" type="varchar(255)"/>
    </addColumn>
    <addColumn 
            tableName="t_reconciliation_result">
        <column name="appr_ref_04" type="varchar(255)"/>
    </addColumn>
    <addColumn 
            tableName="t_reconciliation_result">
        <column name="appr_ref_05" type="varchar(255)"/>
    </addColumn>
    <addColumn 
            tableName="t_reconciliation_result">
        <column name="appr_ref_06" type="varchar(255)"/>
    </addColumn>
    <addColumn 
            tableName="t_reconciliation_result">
        <column name="appr_ref_07" type="varchar(255)"/>
    </addColumn>
    <addColumn 
            tableName="t_reconciliation_result">
        <column name="appr_ref_08" type="varchar(255)"/>
    </addColumn>
    <addColumn 
            tableName="t_reconciliation_result">
        <column name="appr_ref_09" type="varchar(255)"/>
    </addColumn>
    <addColumn 
            tableName="t_reconciliation_result">
        <column name="appr_ref_10" type="varchar(255)"/>
    </addColumn>
    <addColumn 
            tableName="t_reconciliation_result">
        <column name="appr_ref_11" type="varchar(255)"/>
    </addColumn>
    <addColumn 
            tableName="t_reconciliation_result">
        <column name="appr_ref_12" type="varchar(255)"/>
    </addColumn>
    <addColumn 
            tableName="t_reconciliation_result">
        <column name="appr_ref_13" type="varchar(255)"/>
    </addColumn>
    <addColumn 
            tableName="t_reconciliation_result">
        <column name="appr_ref_14" type="varchar(255)"/>
    </addColumn>
    <addColumn 
            tableName="t_reconciliation_result">
        <column name="appr_ref_15" type="varchar(255)"/>
    </addColumn>
    <addColumn 
            tableName="t_reconciliation_result">
        <column name="final_status" type="varchar(255)"/>
    </addColumn>
     <addColumn 
            tableName="t_reconciliation_result">
        <column name="final_action_date" type="timestamp" />
    </addColumn>
	</changeSet>
	<changeSet author="jagan" id="addUnreconciled">
    <addColumn 
            tableName="t_reconciliation_result">
        <column name="unreconciled" type="boolean" afterColumn="reconciled_date"/>
    </addColumn>
	</changeSet>
	<changeSet author="jagan" id="addReconStatus">
    <addColumn 
            tableName="t_reconciliation_result">
        <column name="recon_status" type="varchar(63)" afterColumn="reconciled_date"/>
    </addColumn>
    <renameColumn 
            columnDataType="boolean"
            newColumnName="current_record_flag"
            oldColumnName="unreconciled"
            tableName="t_reconciliation_result"/>
	</changeSet>
	
	
	<changeSet author="kiran" id="createIndexOnReconciliationResult">
		<createIndex indexName="rgid_idx" tableName="t_reconciliation_result"
			unique="false">
			<column name="reconciliation_rule_group_id" type="bigint" />
			<column name="reconciliation_rule_id" type="bigint" />
		</createIndex>
		<createIndex indexName="rec_ref_id" tableName="t_reconciliation_result"
			unique="false">
			<column name="recon_reference" type="varchar(255)" />
		</createIndex>
		<createIndex indexName="orgid_idx" tableName="t_reconciliation_result"
			unique="false">
			<column name="original_row_id" type="bigint" />
		</createIndex>
		
		<createIndex indexName="tgtid_idx" tableName="t_reconciliation_result"
			unique="false">
			<column name="target_row_id" type="bigint" />
		</createIndex>
	</changeSet>
	
	<changeSet author="ravali" id="ViewsFroApprovalgrpsAndJobReferences">
    <createView
            replaceIfExists="true"
            viewName="v_acc_app_rule_groups">  SELECT 
        `ap`.`id` AS `ap_id`,
        `ap`.`name` AS `ap_name`,
        `rec`.`id` AS `rec_id`,
        `rec`.`name` AS `rec_name`,
        `ap`.`tenant_id` AS `tenant_id`,
        `ap`.`enabled_flag` AS `enabled_flag`,
        `ap`.`start_date` AS `start_date`,
        `ap`.`end_date` AS `end_date`
    FROM
        (((SELECT 
            *
        FROM
            `t_rule_group`
        WHERE
            (`t_rule_group`.`rule_purpose` = 'ACCOUNTING'))) `rec`
        LEFT JOIN (SELECT 
           *
        FROM
           `t_rule_group`
        WHERE
            (`t_rule_group`.`rule_purpose` = 'APPROVALS')) `ap` ON ((`ap`.`id` = `rec`.`appr_rule_grp_id`)))
    WHERE
        (`ap`.`name` IS NOT NULL)
    </createView>





    <createView
            replaceIfExists="true"
            viewName="v_recon_app_rule_groups"> SELECT 
        `ap`.`id` AS `ap_id`,
        `ap`.`name` AS `ap_name`,
        `rec`.`id` AS `rec_id`,
        `rec`.`name` AS `rec_name`,
        `ap`.`tenant_id` AS `tenant_id`,
        `ap`.`enabled_flag` AS `enabled_flag`,
        `ap`.`start_date` AS `start_date`,
        `ap`.`end_date` AS `end_date`
    FROM
        (((SELECT 
     *
        FROM
            `t_rule_group`
        WHERE
            (`t_rule_group`.`rule_purpose` = 'RECONCILIATION'))) `rec`
        LEFT JOIN (SELECT 
            *
        FROM
            `t_rule_group`
        WHERE
            (`t_rule_group`.`rule_purpose` = 'APPROVALS')) `ap` ON ((`ap`.`id` = `rec`.`appr_rule_grp_id`)))
    WHERE
        (`ap`.`name` IS NOT NULL)
    </createView>
    
    
    
        <createView
            replaceIfExists="true"
            viewName="v_recon_job_refereces">  
    (SELECT DISTINCT
        `r`.`recon_job_reference` AS `recon_job_reference`,
        `app`.`ap_id` AS `ap_id`,
        `app`.`ap_name` AS `ap_name`,
        `app`.`rec_id` AS `rec_id`,
        `app`.`rec_name` AS `rec_name`,
        `app`.`enabled_flag` AS `enabled_flag`,
        `app`.`start_date` AS `start_date`,
        `app`.`end_date` AS `end_date`,
        `app`.`tenant_id` AS `tenant_id`
    FROM
        (((SELECT 
            `ap`.`id` AS `ap_id`,
                `ap`.`name` AS `ap_name`,
                `rec`.`id` AS `rec_id`,
                `rec`.`name` AS `rec_name`,
                `ap`.`enabled_flag` AS `enabled_flag`,
                `ap`.`start_date` AS `start_date`,
                `ap`.`end_date` AS `end_date`,
                `ap`.`tenant_id` AS `tenant_id`
        FROM
            (((SELECT 
           *
        FROM
            `t_rule_group`
        WHERE
            (`t_rule_group`.`rule_purpose` = 'RECONCILIATION'))) `rec`
        LEFT JOIN (SELECT 
           *
        FROM
            `t_rule_group`
        WHERE
            (`t_rule_group`.`rule_purpose` = 'APPROVALS')) `ap` ON ((`ap`.`id` = `rec`.`appr_rule_grp_id`)))
        WHERE
            (`ap`.`name` IS NOT NULL))) `app`
        JOIN `t_reconciliation_result` `r`)
    WHERE
        (`app`.`rec_id` = `r`.`reconciliation_rule_group_id`))
    </createView>
    
    
    
    
    
       <createView
            replaceIfExists="true"
            viewName="v_acc_job_refereces">    (SELECT DISTINCT
        `asum`.`job_reference` AS `job_reference`,
        `app`.`ap_id` AS `ap_id`,
        `app`.`ap_name` AS `ap_name`,
        `app`.`acc_id` AS `acc_id`,
        `app`.`acc_name` AS `acc_name`,
        `app`.`enabled_flag` AS `enabled_flag`,
        `app`.`start_date` AS `start_date`,
        `app`.`end_date` AS `end_date`,
        `app`.`tenant_id` AS `tenant_id`
    FROM
        (((SELECT 
            `ap`.`id` AS `ap_id`,
                `ap`.`name` AS `ap_name`,
                `acc`.`id` AS `acc_id`,
                `acc`.`name` AS `acc_name`,
                `ap`.`enabled_flag` AS `enabled_flag`,
                `ap`.`start_date` AS `start_date`,
                `ap`.`end_date` AS `end_date`,
                `ap`.`tenant_id` AS `tenant_id`
        FROM
            (((SELECT 
           *
        FROM
           `t_rule_group`
        WHERE
            (`t_rule_group`.`rule_purpose` = 'ACCOUNTING'))) `acc`
        LEFT JOIN (SELECT 
           *
        FROM
            `t_rule_group`
        WHERE
            (`t_rule_group`.`rule_purpose` = 'APPROVALS')) `ap` ON ((`ap`.`id` = `acc`.`appr_rule_grp_id`)))
        WHERE
            (`ap`.`name` IS NOT NULL))) `app`
        JOIN `t_accounting_data` `asum`)
    WHERE
        (`app`.`acc_id` = `asum`.`acct_group_id`))
    </createView>
    
    
</changeSet>

    <changeSet author="shiva" id="addColumnAmountInReconResult">
	    <addColumn 
	            tableName="t_reconciliation_result">
	        <column name="amount" type="decimal(15,2)" afterColumn="reconciliation_rule_id"/>
	    </addColumn>
	</changeSet>
	<changeSet author="jagan" id="addOrgTarColumnAmountInReconResult">
	    <addColumn 
	            tableName="t_reconciliation_result">
	        <column name="original_amount" type="decimal(30,4)" afterColumn="reconciliation_rule_id"/>
	    </addColumn>
	    <addColumn 
	            tableName="t_reconciliation_result">
	        <column name="target_amount" type="decimal(30,4)" afterColumn="reconciliation_rule_id"/>
	    </addColumn>
	</changeSet>

</databaseChangeLog>
