<!-- <div class="row leftmargin-20" style="border-bottom: 1px solid #eee;" *ngIf="!ruleCreationInWQ && ruleGroupService.ruleGroup.coa">
	<div class="col-md-6 col-sm-6 col-xs-6" style="padding-left:0px">
		<h4 style="margin-top: 6px;">
			<b>Rules({{ruleGroupService.accountingRuleGroup.rules.length}})</b>
		</h4>
	</div>
	<div class="col-md-6 col-sm-6 col-xs-6" *ngIf="ruleGroupService.accountingRuleGroup.rules && !isViewOnly ">
		
		<button md-icon-button class="pull-right  md-36" mdTooltip="Add New Rule" (click)="addNewRuleObject(ruleGroupService.accountingRuleGroup.rules.length,0)"
		[disabled]=" accRuleForm && (
		accRuleForm.hasError('required', 'ruleCode'+(ruleGroupService.accountingRuleGroup.rules.length-1))
		||
		accRuleForm.hasError('required', 'sdv'+(ruleGroupService.accountingRuleGroup.rules.length-1))
		||accRuleForm.hasError('required', 'reconDataSource'+(ruleGroupService.accountingRuleGroup.rules.length-1)) 
		
		|| accRuleForm.hasError('required', 'enterCurrencyColId'+(ruleGroupService.accountingRuleGroup.rules.length-1)))"
		mdTooltip="New Rule" [ngx-scroll-to]="ngxScrollToLastRule">
			<md-icon>add</md-icon>
		</button>
	</div>
</div> -->
<div class="row" style="margin: 0px 16px !important;position: sticky;z-index: 3;top: 40px;background-color: white;border-bottom: 1px solid lightgray;padding-top: 9px;" *ngIf="ruleGroupService.ruleGroup.coa" >
	<div class="col-md-6 col-sm-6 col-xs-6">
		<h4 style="margin-top: 6px;">
			<b *ngIf=" ruleGroupService.accountingRuleGroup &&  ruleGroupService.accountingRuleGroup.rules &&  ruleGroupService.accountingRuleGroup.rules.length>0">
				Rules(
					
					<span *ngIf="ruleGroupService .ruleGroup.rulePurpose == 'ACCOUNTING' && ruleGroupService.accountingRuleGroup && ruleGroupService.accountingRuleGroup.rules && ruleGroupService.ruleGroup.coa">{{ruleGroupService.accountingRuleGroup.rules.length}}</span>
					
					)</b>
		</h4>
	</div>
	<div class="col-md-6 col-sm-6 col-xs-6">
		<button md-icon-button class="pull-right  md-36" mdTooltip="Add New Rule" (click)="addNewRuleObject(ruleGroupService.accountingRuleGroup.rules.length,0)"
		*ngIf="ruleGroupService.ruleGroup.coa && ruleGroupService .ruleGroup.rulePurpose == 'ACCOUNTING' && ruleGroupService.accountingRuleGroup.rules && !isViewOnly "	 [ngx-scroll-to]="ngxScrollToLastRule">
			<md-icon>add</md-icon>
	</button>
	<div class="pull-right" style="padding-top: 12px;;padding-right: 8px;" *ngIf="ruleGroupService.accountingRuleGroup.rules && ruleGroupService.accountingRuleGroup.rules.length>1">
		<span class="hand underline-class" style="font-weight: bold;padding-right: 6px;font-size: 11px;" (click)="expandAll()">Expand All</span>
		<span class="hand underline-class" style="font-weight: bold;font-size: 11px;"  (click)="collapseAll()">Collapse All</span>
	</div>
		<!-- <button md-icon-button class=" pull-right md-36" mdTooltip="Hide Header" *ngIf="ruleGroupService.showHeader" (click)="ruleGroupService.toggleHeader()" >
				<md-icon>expand_less</md-icon>
			</button>
		<button md-icon-button class="pull-right md-36" mdTooltip="Show Header" *ngIf="!ruleGroupService.showHeader" (click)="ruleGroupService.toggleHeader()">
				<md-icon>expand_more</md-icon>
		</button> -->
	</div>
</div>
<button md-icon-button class="pull-right" *ngIf="ruleCreationInWQ" (click)="saveAdhocRule()" aria-hidden="true" mdTooltip="Save Rule Group">
	<md-icon>save</md-icon>
</button>
<form novalidate #accRuleForm="ngForm" *ngIf="ruleGroupService.ruleGroup.coa">
	<div class="row sub-heading-content rule-group-accounting displayAcc-popoverbody" id="hideIconTable">
		<ng-template ngFor let-ruleObj [ngForOf]="ruleGroupService.accountingRuleGroup.rules" let-i="index" ;>
			<div class="setups-accordian" style="padding-bottom: 10px">
				<md-accordion class="padding-bottom-accounting-lines">
					<md-expansion-panel class="mat-overflow-unset" (opened)="openRuleTab[i] = true" (closed)="openRuleTab[i] = false" [expanded]="openRuleTab[i]">
						<md-expansion-panel-header>
							<md-panel-title>

								<span *ngIf="ruleObj && ruleObj.ruleCode" style="padding-top: 8px;">{{ruleObj.ruleCode}}</span>

								<span *ngIf="!ruleObj.ruleCode">New Rule - {{i+1}}</span>


							</md-panel-title>

							<md-panel-description>
								<div class="mat-cus-desc">
									<div *ngIf="ruleObj.sourceDataViewName">
										<label>Data Source: </label>
										<span style="margin-right: 1rem;">{{ruleObj.sourceDataViewName}}</span>
									</div>
							
									<div *ngIf="ruleObj.enterCurrencyColName">
										<label>Entered Currency: </label>
										<span style="margin-right: 1rem;">{{ruleObj.enterCurrencyColName}}</span>
									</div>
							
									<div *ngIf="ruleObj.startDate">
										<label>From: </label>
										<span style="margin-right: 1rem;">{{ruleObj.startDate | date:'mediumDate'}}</span>
									</div>
								</div>
							</md-panel-description>
						
							<p class="badge badge-success icons-over-accordian" *ngIf="ruleObj.assignmentFlag && isViewOnly">Active</p>
							<p class="badge badge-warning icons-over-accordian" *ngIf="(!ruleObj.assignmentFlag || ruleObj.assignment == false )&& isViewOnly">Inactive</p>
						</md-expansion-panel-header>
						<div class="md-accordian-row-padding">
							<div class="row" style="display:flex;margin-left: 9px;" *ngIf="!ruleCreationInWQ && !isViewOnly && ruleObj.editRule && ruleGroupService.accountingRuleGroup && ruleGroupService.accountingRuleGroup.existingRuleListLOV">
								<div class="col-md-3"  *ngIf="!ruleCreationInWQ && ruleObj.editRule && !isViewOnly">
									<!-- <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 multi-select-placeholder" style="font-size: 12px;color: rgba(0,0,0,.54);padding-right: 0px" 
									*ngIf="!ruleCreationInWQ && ruleObj.editRule && !isViewOnly && ruleGroupService.accountingRuleGroup.existingRuleListLOV
									&& ruleGroupService.accountingRuleGroup.existingRuleListLOV.length>0">
										<p style="color : #949494 !important;">Copy from existing rule :</p>
									</div>
									<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 multi-select-elment-style" style="margin-top: -19px;" 
									*ngIf="!ruleCreationInWQ && ruleObj.editRule && !isViewOnly && ruleGroupService.accountingRuleGroup.existingRuleListLOV
									&& ruleGroupService.accountingRuleGroup.existingRuleListLOV.length>0">
										<angular2-multiselect [data]="ruleGroupService.accountingRuleGroup.existingRuleListLOV" [(ngModel)]="ruleObj.copiedRefId"
										 [settings]="reconDVdropdownSettings" (onSelect)="getExistingRuleDetailsAndCopy($event,i)" (onDeSelect)="clearTaggedRuleObject(i)"
										 name="ruleTagLOV{{i}}" #ruleTagLOV{{i}}="ngModel" *ngIf="!ruleCreationInWQ && ruleObj.editRule && !isViewOnly && ruleGroupService.accountingRuleGroup.existingRuleListLOV
										  && ruleGroupService.accountingRuleGroup.existingRuleListLOV.length>0">
										</angular2-multiselect>
									</div> -->
									<div class="multi-select-placeholder">
											<div class="ms-label" *ngIf="!ruleCreationInWQ && ruleObj.editRule && !isViewOnly && ruleGroupService.accountingRuleGroup.existingRuleListLOV
											&& ruleGroupService.accountingRuleGroup.existingRuleListLOV.length>0" >
												<p>Copy from existing rule :</p>
											</div>
											<div >
													<angular2-multiselect [data]="ruleGroupService.accountingRuleGroup.existingRuleListLOV" [(ngModel)]="ruleObj.copiedRefId"
													[settings]="reconDVdropdownSettings" (onSelect)="getExistingRuleDetailsAndCopy($event,i)" (onDeSelect)="clearTaggedRuleObject(i)"
													name="ruleTagLOV{{i}}" #ruleTagLOV{{i}}="ngModel" *ngIf="!ruleCreationInWQ && ruleObj.editRule && !isViewOnly && ruleGroupService.accountingRuleGroup.existingRuleListLOV
													 && ruleGroupService.accountingRuleGroup.existingRuleListLOV.length>0">
												   </angular2-multiselect>
											</div>
										</div>
									<!-- <p style="padding-top:27px;color:red !important;font-size:12px;" *ngIf="!ruleCreationInWQ && ruleObj.editRule && !isViewOnly &&  ruleGroupService.accountingRuleGroup && (!ruleGroupService.accountingRuleGroup.existingRuleListLOV || ruleGroupService.accountingRuleGroup.existingRuleListLOV .length<=0)">
											Existing rules not found.
									</p> -->
									<!-- <p class="help-block errorFont" style="margin-left: 32px;" *ngIf="accRuleForm.hasError('required', 'ruleTagLOV'+i) && ruleGroupService.submitted">You have chosen to tag.</p> -->
								</div>
								<div class="col-md-8"  style="margin-top: 32px;left: 40px;">
										<md-slide-toggle class="pull-right" style="padding-top:5px" color="primary" mdTooltip="Set Status" placeholder="status" [(ngModel)]="ruleObj.assignmentFlag"
										name="status{{i}}" *ngIf="isEdit && ruleObj.id">
									   </md-slide-toggle>
   
									<button md-icon-button class="pull-right" style="top:-10px" (click)="copyAndCreateNewRule(ruleGroupService.accountingRuleGroup.rules.length,i)"
									[disabled]="accRuleForm.hasError('required', 'ruleCode'+i) ||accRuleForm.hasError('required', 'sdv'+i) 
									||	accRuleForm.hasError('required', 'reconDataSource'+i) 
									
								 || 	accRuleForm.hasError('required', 'enterCurrencyColId'+i)"
									*ngIf=" !isViewOnly" mdTooltip="Copy and create new">
									   <md-icon>content_copy</md-icon>
								   </button>
	   
	   
								   <button md-icon-button class="pull-right" mdTooltip="Clear rule" style="font-size: 17px;top: -10px;" *ngIf="!isViewOnly &&  !ruleCreationInWQ "
									(click)="clearRuleObject(i);false">
									   <i class="fa fa-eraser" aria-hidden="true"></i>
								   </button>
	   
								   <button md-icon-button class="pull-right" style="top:-10px;" (click)="deleteRuleObject(i);false" *ngIf=" !isViewOnly &&  ruleObj.editRule && !ruleCreationInWQ && (ruleGroupService.accountingRuleGroup.rules.length != 1)"
									mdTooltip="Delete Rule">
									   <md-icon>delete</md-icon>
								   </button>
								</div>
							</div>
							<div class="row mat-cus-desc-hide" style="display:flex;" >

								<div class="col-md-3 col-sm-4" *ngIf="!ruleCreationInWQ && !isViewOnly && ruleObj.editRule" style="margin-top: 12px;">
									<md-input-container  >
										<input mdInput [(ngModel)]="ruleObj.ruleCode" placeholder="Rule Name" name="ruleCode{{i}}" [ngClass]="{'text-ellipse' : (isViewOnly || !ruleObj.editRule)}" required #ruleCode{{i}}="ngModel"  (ngModelChange)="ruleDuplicationCheck(i)">
									</md-input-container>
									<p class="help-block errorFont validation-error" *ngIf="accRuleForm.hasError('required', 'ruleCode'+i) && ruleGroupService.submitted">Rule Name is required.</p>
									<p *ngIf="ruleObj.duplicateRuleName"  class="help-block errorFont validation-error" >Rule name already exists</p>
									<!-- <form class="form-horizontal" [formGroup]="ruleListformArray[i]" *ngIf="ruleObj.editRule && !isViewOnly && ruleListformArray && ruleListformArray[i]">
									<md-input-container>
										<input formControlName="data" [formControl]="ruleObj.formCntrl" mdInput placeholder="Rule Name" auto-complete [(ngModel)]="ruleObj.ruleCode" [source]="ruleListArrays[i]"
										 (onBlur)="checkIfRuleCodeisUndefined(i)" [list-formatter]="autocompleListFormatter" value-property-name="id" display-property-name="ruleCode"
										 required (valueChanged)="setRuleObject($event,i,ruleListformArray[i].value)" />
									</md-input-container>
								</form> -->
									<!-- <p class="help-block errorFont" style="margin-left: 32px;" *ngIf="ruleObj.editRule && !isViewOnly && ruleObj.formCntrl && ruleObj.formCntrl.invalid && ruleGroupService.submitted">Rule code is required.</p> -->

								</div>
								<div class="col-md-3 col-sm-4" *ngIf="!ruleCreationInWQ &&( isViewOnly || !ruleObj.editRule)">
									<md-input-container class="example-full-width">
										<input class="inputHeight" mdInput [(ngModel)]="ruleObj.ruleCode" [ngClass]="{'color-black' : true ,'text-ellipse' : (isViewOnly || !ruleObj.editRule)}" [disabled]="true" placeholder="Rule Name"
										 name="ruleCode{{i}}" required #ruleCode{{i}}="ngModel">
									</md-input-container>
								</div>

								<div class="col-md-3" *ngIf="ruleCreationInWQ">
									<md-input-container>
										<input mdInput [(ngModel)]="ruleObj.ruleCode" placeholder="Rule Name" name="ruleNameForWQ" required #ruleNameForWQ="ngModel">
									</md-input-container>
								</div>


								<div class="col-md-2" *ngIf="(ruleObj.editRule && !isViewOnly) && ((ruleObj.purpose == 'RECONCILED_AND_ACCOUNTED') || (dispViewField ) || (ruleObj.purpose != 'RECONCILED_AND_ACCOUNTED') )
																&& !ruleCreationInWQ && sourceDataViewsArrays && sourceDataViewsArrays.length>0">
									<!-- <div class="col-lg-10 col-md-10 col-sm-10 col-xs-10 multi-select-placeholder" style="font-size: 12px;color: rgba(0,0,0,.54);padding-right: 0px"
																	 *ngIf="ruleObj.editRule && !isViewOnly ">
																		<p  style="color : #949494 !important;"></p></div>
																
																	<div class="col-lg-10 col-md-10 col-sm-12 col-xs-12 multi-select-elment-style" style="margin-top: -19px" *ngIf="sourceDataViewsArrays && sourceDataViewsArrays.length>0">
																		<angular2-multiselect [data]="sourceDataViewsArrays" [(ngModel)]="ruleObj.sourceDVId" required [settings]="dropdownSettings"
																		 (onSelect)="setDataview($event,i)" name="sdv{{i}}" #sdv{{i}}="ngModel">
																		</angular2-multiselect>
																		
																		<p class="help-block errorFont" style="margin-left: 32px;" *ngIf="accRuleForm.hasError('required', 'sdv'+i) && ruleGroupService.submitted">Data source is required.</p>
																	</div> -->
									<div class="multi-select-placeholder">
										<div class="ms-label">
											<p> Data source :</p>
										</div>
										<div>
											<angular2-multiselect [data]="sourceDataViewsArrays" [(ngModel)]="ruleObj.sourceDVId" required [settings]="dropdownSettings"
											 (onSelect)="setDataview($event,i)" name="sdv{{i}}" #sdv{{i}}="ngModel">
											</angular2-multiselect>
										</div>
									</div>
									<p class="help-block errorFont dropdown-validation-error"  *ngIf="accRuleForm.hasError('required', 'sdv'+i) && ruleGroupService.submitted">Data
										source is required.</p>
								</div>
								<div class="col-md-2" *ngIf="(isViewOnly || !ruleObj.editRule ) && ((ruleObj.purpose == 'RECONCILED_AND_ACCOUNTED') || (dispViewField ) || (ruleObj.purpose != 'RECONCILED_AND_ACCOUNTED') )&& !ruleCreationInWQ">
									<md-input-container class="example-full-width">
										<input class="inputHeight" mdInput [(ngModel)]="ruleObj.sourceDataViewName" [ngClass]="{'color-black' : true }" [disabled]="true"
										 placeholder="Data Source" name="sourceDataViewName{{i}}" required #sourceDataViewName{{i}}="ngModel">
									</md-input-container>
								</div>

								<div class="col-md-2" *ngIf="ruleCreationInWQ">
									<md-input-container class="example-full-width">
										<input mdInput [(ngModel)]="ruleObj.sourceDataViewName" [ngClass]="{'color-black' : true }" [disabled]="true" placeholder="Data View"
										 name="sourceDataViewName{{i}}" required #sourceDataViewName{{i}}="ngModel">
									</md-input-container>
								</div>
								<div class="col-md-2" *ngIf="ruleGroupService.ruleGroup.activityBased == true && ruleObj.editRule && !isViewOnly && ruleObj.reconDataSourceArrays && ruleObj.reconDataSourceArrays.length>0 ">
									<!-- <div class="col-lg-10 col-md-10 col-sm-10 col-xs-10 multi-select-placeholder" style="font-size: 12px;color: rgba(0,0,0,.54);padding-right: 0px"
									 *ngIf="ruleObj.reconDataSourceArrays && ruleObj.reconDataSourceArrays.length>0">
										<p style="color : #949494 !important;">Recon data source :</p></div>
									<div class="col-lg-10 col-md-10 col-sm-10 col-xs-10 multi-select-elment-style" style="margin-top: -19px;" *ngIf="ruleObj.reconDataSourceArrays && ruleObj.reconDataSourceArrays.length>0">
										<angular2-multiselect [data]="ruleObj.reconDataSourceArrays" required [(ngModel)]="ruleObj.reconSourceDVId" [settings]="reconDVdropdownSettings"
										 (onSelect)="setReconDataSource($event,i)" [ngModelOptions]="{standalone: true}" *ngIf="ruleGroupService.ruleGroup.reconciliationGroupId"
										 (onOpen)="onOpen($event)" name="reconDataSource{{i}}" #reconDataSource{{i}}="ngModel">
										</angular2-multiselect>
										<p class="help-block errorFont" style="margin-left: 32px;" *ngIf="accRuleForm.hasError('required', 'reconDataSource'+i) && ruleGroupService.submitted">Recon data source is required.</p>
									
									</div> -->
									<div class="multi-select-placeholder"  *ngIf="!ruleCreationInWQ && ruleObj.editRule && !isViewOnly && ruleObj.reconDataSourceArrays && ruleObj.reconDataSourceArrays.length>0">
											<div class="ms-label">
												<p>Recon data source :</p>
											</div>
											<div>
													<angular2-multiselect [data]="ruleObj.reconDataSourceArrays" required [(ngModel)]="ruleObj.reconSourceDVId" [settings]="reconDVdropdownSettings"
													(onSelect)="setReconDataSource($event,i)" [ngModelOptions]="{standalone: true}" *ngIf="ruleGroupService.ruleGroup.reconciliationGroupId"
													(onOpen)="onOpen($event)" name="reconDataSource{{i}}" #reconDataSource{{i}}="ngModel">
												   </angular2-multiselect>
											</div>
										</div>
										<p class="help-block errorFont dropdown-validation-error"  *ngIf="accRuleForm.hasError('required', 'reconDataSource'+i) && ruleGroupService.submitted">Recon data source is required.</p>
								</div>
								<div class="col-md-2" *ngIf="ruleGroupService.ruleGroup.activityBased == true && (isViewOnly ||  !ruleObj.editRule ) && ruleObj.reconDataSourceName">
									<md-input-container class="example-full-width">
										<input class="inputHeight" mdInput [(ngModel)]="ruleObj.reconDataSourceName" [ngClass]="{'color-black' : true }" [disabled]="true"
										 placeholder="Recon Data source" name="reconDataSourceName{{i}}" required #reconDataSourceName{{i}}="ngModel">
									</md-input-container>
								</div>
								<!-- 							   
								<form class="form-horizontal" [formGroup]="dataViewformArray[i]" *ngIf="!isViewOnly && !ruleObj.id && dataViewformArray && dataViewformArray[i] ">
									<md-input-container>
										<input formControlName="data" mdInput placeholder="Data View" (ngModelChange)="ChangeDataView($event,i,dataViewformArray[i].value)"
										 auto-complete [(ngModel)]="ruleObj.sourceDataViewName" [source]="sourceDataViewsArrays[i]" [list-formatter]="dataViewListFormatter"
										 value-property-name="id" display-property-name="dataViewDispName" (valueChanged)="setDataview(i, dataViewformArray[i].value)"
										 required/>
									</md-input-container>
								</form> -->

								<div class="col-md-2" *ngIf="ruleObj.editRule && !isViewOnly" style="margin-top: 9px;">
									<md-select placeholder="Entered Currency" class="example-full-width" [(ngModel)]="ruleObj.enterCurrencyColId" [ngClass]="{'color-black' : isViewOnly}"
									 name="enterCurrencyColId{{i}}" required #enterCurrencyColId{{i}}="ngModel">
									<ng-container *ngFor="let dvCol of ruleObj.dvColumns">
									 <md-option  [value]="dvCol.id" *ngIf="dvCol.qualifier == 'CURRENCYCODE'" (click)="ruleObj.enterCurrencyColName = dvCol.columnName">
											{{ dvCol.columnName}}</md-option>
										</ng-container>	
									</md-select>

									<p class="help-block errorFont validation-error"  *ngIf="accRuleForm.hasError('required', 'enterCurrencyColId'+i) && ruleGroupService.submitted">Entered currency is required.</p>
								</div>
								<div class="col-md-2" *ngIf="isViewOnly || !ruleObj.editRule ">
									<md-input-container class="example-full-width">
										<input class="inputHeight" mdInput [(ngModel)]="ruleObj.enterCurrencyColName" [ngClass]="{'color-black' : true }" [disabled]="true"
										 placeholder="Entered Currency" name="enterCurrencyColName{{i}}" required #enterCurrencyColName{{i}}="ngModel">
									</md-input-container>
								</div>
								<div class="col-md-2 col-sm-2 date-field-size" [id]="'ruleScroll_'+i" [ngStyle]="{'margin-top':(ruleObj.editRule && (!isViewOnly)) ? '11px' :'0px'}">

									<md-form-field>
										<input mdInput [mdDatepicker]="stpicker" placeholder="From" [ngClass]="{'color-black' : true}" [disabled]="!ruleObj.editRule || isViewOnly"
										 [disabled]="isViewOnly" [(ngModel)]="ruleObj.startDate" [max]="ruleObj.endDate" name="rulestartDate{{i}}" [min]="ruleObj.today"
										 (dateChange)="ruleGroupService.accountingRuleGroup.rules[i].startDateChange=true;startDateChanged(ruleObj.startDate,i);"
										 required>
										<md-datepicker-toggle mdSuffix [for]="stpicker" *ngIf="ruleObj.editRule  && !isViewOnly"></md-datepicker-toggle>
										<md-datepicker #stpicker></md-datepicker>
									</md-form-field>
									<p class="help-block errorFont validation-error" *ngIf="accRuleForm.hasError('required', 'rulestartDate'+i) && ruleGroupService.submitted">Entered currency is required.</p>
									<!-- <md-form-field *ngIf="ruleObj.endDate">
									<input mdInput [mdDatepicker]="stpicker" placeholder="From" [ngClass]="{'color-black' : true}" [disabled]="isViewOnly ||   ruleObj.id"
									 [disabled]="isViewOnly ||   ruleObj.id" [(ngModel)]="ruleObj.startDate" [max]="ruleObj.endDate" name="rulestartDate{{i}}"
									 required [max]="ruleObj.endDate">
									<md-datepicker-toggle mdSuffix [for]="stpicker" *ngIf="!isViewOnly"></md-datepicker-toggle>
									<md-datepicker #stpicker></md-datepicker>
								</md-form-field> -->

									<!-- <md-form-field>
									<input mdInput [mdDatepicker]="stpicker" placeholder="Start date" [ngClass]="{'color-black' : true}" [disabled]="isViewOnly ||   ruleObj.id"
									 [(ngModel)]="ruleObj.startDate" name="rulestartDate{{i}}" required>
									<md-datepicker-toggle mdSuffix [for]="stpicker" *ngIf="!isViewOnly "></md-datepicker-toggle>
									<md-datepicker #stpicker></md-datepicker>
								</md-form-field> -->
								</div>
								<div class="col-md-2 col-sm-2 date-field-size" [ngStyle]="{'margin-top':(ruleObj.editRule && (!isViewOnly)) ? '11px' :'0px'}" *ngIf="(ruleObj.editRule && !isViewOnly) || ((isViewOnly || !ruleObj.editRule) && ruleObj.endDate)">
									<md-form-field>
										<input mdInput [mdDatepicker]="edpicker" placeholder="To" [min]="ruleObj.startDate" (dateChange)="ruleGroupService.accountingRuleGroup.rules[i].endDateChange=true"
										 [ngClass]="{'color-black' : isViewOnly}" [disabled]="!ruleObj.editRule  || isViewOnly" [(ngModel)]="ruleObj.endDate"
										 name="endDate{{i}}">
										<md-datepicker-toggle mdSuffix [for]="edpicker" *ngIf="ruleObj.editRule  && !isViewOnly"></md-datepicker-toggle>
										<md-datepicker #edpicker></md-datepicker>
									</md-form-field>
								</div>

								<!-- <div class="col-md-3">
								<md-select placeholder="Chart Of Account" [(ngModel)]="ruleObj.coa" (change)="SelectCOA(i)" [ngClass]="{'color-black' : isViewOnly}"
								 name="coa{{i}}" required #coa{{i}}="ngModel" *ngIf="!isViewOnly && !ruleObj.id">
									<md-option *ngFor="let coa of chartOfAccounts" [value]="coa.id">
										{{ coa.name}} </md-option>
								</md-select>
								<md-input-container class="example-full-width" *ngIf="isViewOnly || ruleObj.id">
									<input class="inputHeight" mdInput [(ngModel)]="ruleObj.coaMeaning" [ngClass]="{'color-black' : true }" [disabled]="true"
									 placeholder="Chart Of Account" name="coaMeaning{{i}}" required #coaMeaning{{i}}="ngModel">
								</md-input-container>
							</div> -->
								<div class="col-md-3" style="margin-top: 11px" *ngIf="ruleGroupService.ruleGroup.activityBased == true && ruleObj.reconDataSourceId ">
									<md-select placeholder="Reconciliation Status" [(ngModel)]="ruleObj.reconciliationStatus" [ngClass]="{'color-black' : isViewOnly}"
									 [disabled]="!ruleObj.editRule || isViewOnly" name="reconciliationStatus{{i}}" #reconciliationStatus="ngModel" [style.width]="'100%'">
										<md-option *ngFor="let col of reconciliationList" [value]="col.lookUpCode">
											{{ col.meaning}} </md-option>
									</md-select>
								</div>
								<div class="col-md-3"style="margin-top: 11px"  *ngIf="ruleGroupService.ruleGroup.activityBased == true  && ruleObj.reconDataSourceId ">
									<md-select placeholder="Accounting Status" [(ngModel)]="ruleObj.accountingStatus" [ngClass]="{'color-black' : isViewOnly}"
									 [disabled]="!ruleObj.editRule || isViewOnly" name="accountingStatus{{i}}" #accountingStatus="ngModel" [style.width]="'100%'">
										<md-option *ngFor="let col of accountingList" [value]="col.lookUpCode">
											{{ col.meaning}} </md-option>
									</md-select>
								</div>
								<!-- <div class="col-md-1 col-sm-1 col-xs-1" style="top:25px;">
									


								</div> -->

							</div>
							<div style="margin:10px;" class="child-accordian-shadow md-accordian-row-padding rule-conditions-header-background accounting-rule-child-styles">
								<md-accordion class="padding-bottom-accounting-lines">
									<md-expansion-panel [expanded]="true" [disabled]="true" class="mat-overflow-unset" 
									*ngIf="((((ruleObj.editRule && !isViewOnly && ruleObj.sourceDataViewId) || ((isViewOnly || !ruleObj.editRule) && ruleObj.sourceDataViewName) )
									&& ruleGroupService.ruleGroup.coa) && !ruleCreationInWQ) || (ruleCreationInWQ)">
										<md-expansion-panel-header>
											<md-panel-title>
											<p>Header Derivation Rules</p>	
											</md-panel-title>
										</md-expansion-panel-header>
										<!-- <form novalidate #headerDerivationsForm="ngForm"> -->
											<div *ngIf="isViewOnly || !ruleObj.editRule">
												<!-- <md-card-content> -->
												<div class="div-border-styles table-responsive table-header-styles" style="width: 70%;margin-top: 10px;">
													<table class="table">
														<thead class="text-nowrap" style="text-align : center;">
															<tr>
																<!-- <th>Line Type</th> -->
																<th></th>
																<th>Criteria</th>
																<th>Column</th>
																<th>Value</th>
															</tr>

														</thead>
														<tbody style="word-wrap: break-word;">
															<tr *ngFor="let headerLine of ruleObj.headerDerivationRules   ;let h=index">
																<td>
																	<span class="linetext-input">{{headerLine.accountingReferencesMeaning }}</span>
																</td>
																<td>
																	<span class="linetext-input">{{headerLine.criteriaMeaning }}</span>
																</td>
																<td>
																	<span class="linetext-input">{{headerLine.dataViewColumnName}}</span>
																</td>

																<td>
																	<span class="linetext-input">{{headerLine.segValueMeaning}}</span>
																	<i class="fa fa-filter hand" aria-hidden="true" mdTooltip="{{headerLine.operatorMeaning}}-{{headerLine.value}}" popoverTitle="Filter"
																	 popoverPlacement="left" popover="operator : {{headerLine.operatorMeaning}} - value : {{headerLine.value}} {{headerLine.mappingSetName}}"
																	 (click)="headerFilters.show()" *ngIf="headerLine.criteria == 'VIEW_COLUMN'">
																	</i>
																	<popover-content #headerFilters placement="left" [animation]="true" [closeOnClickOutside]="false" style="z-index: 999 !important;width:250px;height:80px">
																		<div class="row">
																			<div class="col-md-12">
																				<div class="table-responsive table-header-styles">
																					<table>
																						<thead>
																							<tr>
																								<th>Operator</th>
																								<th>Value</th>
																							</tr>
																						</thead>
																						<tbody style="word-wrap: break-word;">
																							<tr>
																								<td>
																									<span class="linetext-input" *ngIf="isViewOnly || (!isViewOnly &&  ruleObj.id)">{{headerLine.operatorMeaning}}</span>
																								</td>
																								<td>
																									<span class="linetext-input" *ngIf="isViewOnly || (!isViewOnly &&  ruleObj.id)">{{headerLine.value}}</span>
																									<!-- 	<span class="linetext-input" *ngIf="isViewOnly || (!isViewOnly &&  ruleObj.id)">{{headerLine.mappingSetName}}</span> -->
																								</td>
																							</tr>
																						</tbody>
																					</table>
																				</div>
																			</div>
																		</div>

																	</popover-content>
																	<!-- <div class="display-flex" *ngIf="headerLine.criteria == 'VIEW_COLUMN'">
																			
																			<div class="col-md-10">
																					<span class="linetext-input">{{headerLine.segValue}}</span>
																			</div>
																			<div class="col-md-2"  *ngIf="headerLine.criteria == 'VIEW_COLUMN'">
																					<i class="fa fa-filter hand" aria-hidden="true" mdTooltip="{{headerLine.operatorMeaning}}-{{headerLine.value}}" popoverTitle="Filter"
																					popoverPlacement="left" popover="operator : {{headerLine.operatorMeaning}} - value : {{headerLine.value}} {{headerLine.mappingSetName}}"
																					(click)="headerFilters.show()">
																				   </i>
																				   <popover-content #headerFilters placement="left" [animation]="true" [closeOnClickOutside]="false" style="z-index: 999 !important;width:250px;height:80px">
																					   <div class="row">
																						   <div class="col-md-12">
																							   <div class="table-responsive">
																								   <table>
																									   <thead>
																										   <tr>
																											   <th>Operator</th>
																											   <th>Value</th>
																										   </tr>
																									   </thead>
																									   <tbody style="word-wrap: break-word;">
																										   <tr>
																											   <td>
																												   <span class="linetext-input" *ngIf="isViewOnly || (!isViewOnly &&  ruleObj.id)">{{headerLine.operatorMeaning}}</span>
																											   </td>
																											   <td>
																												   <span class="linetext-input" *ngIf="isViewOnly || (!isViewOnly &&  ruleObj.id)">{{headerLine.value}}</span>
																											
																											   </td>
																										   </tr>
																									   </tbody>
																								   </table>
																							   </div>
																						   </div>
																					   </div>
			   
																				   </popover-content>
																			</div>
		
		
																	</div> -->
																</td>
															</tr>
														</tbody>
													</table>

												</div>
												<!-- </md-card-content> -->
											</div>

											<div class="div-border-styles" *ngIf="ruleObj.editRule && !isViewOnly" style="min-height:195px;width: 70%;">
												<!-- <md-card-content style="padding-top: 6px;"> -->
												<div class="row accGroup" style=" background-color:whitesmoke;font-weight:bold; border-bottom: solid 1px #dedbdb;margin: 0">
													<div class="col-md-2" style="text-align: center;padding-bottom: 7px;padding-top: 3px;">
														<!-- <p>Line Type</p> -->
													</div>
													<div class="col-md-2" style="text-align: center;padding-bottom: 7px;padding-top: 3px;">
														<p>Criteria*</p>
													</div>
													<div class="col-md-3" style="text-align: center;padding-bottom: 7px;padding-top: 3px;">
														<p>Column*</p>
													</div>
													<div class="col-md-3" style="text-align: center;padding-bottom: 7px;padding-top: 3px;">
														<p>Value*</p>
													</div>
													<!-- <div class="col-md-1"></div> -->
												</div>
												<ng-template ngFor let-headerLine [ngForOf]="ruleObj.headerDerivationRules" let-h="index" ;>
													<div class="row accGroup" [ngStyle]="{'padding-top':(h==0) ? '10px' :''}" style="padding-bottom: 5px;">
														<div class="col-md-2">
															<p class="linetext-input">{{headerLine.accountingReferencesMeaning }}</p>
														</div>
														<div class="col-md-2">
															<md-select class="md-no-placeholder" [(ngModel)]="headerLine.criteria" (change)="selectHeaderCriteria(i,h)" [ngClass]="{'color-black' : isViewOnly}"
															 [disabled]="isViewOnly || !ruleObj.editRule" name="criteria{{i}}{{h}}" required #criteria{{i}}{{h}}="ngModel"
															 *ngIf="ruleObj.editRule && !isViewOnly">
																<md-option *ngFor="let criteria of accCriterias" [value]="criteria.lookUpCode">
																	{{ criteria.meaning }} </md-option>
															</md-select>

															<p class="help-block errorFont validation-error" *ngIf="accRuleForm.hasError('required', 'criteria'+i+h) && ruleGroupService.submitted">Criteria is required.</p>
															<span class="linetext-input" *ngIf="isViewOnly || !ruleObj.editRule">{{headerLine.criteriaMeaning }}</span>
														</div>
														<div class="col-md-3">
															<md-select class="md-no-placeholder" [(ngModel)]="headerLine.dataViewColumn" [disabled]="isViewOnly" name="enterCurrencyColId{{i}}{{h}}"
															 required #enterCurrencyColId{{i}}{{h}}="ngModel" *ngIf="ruleObj.editRule &&  headerLine.criteria != 'CONSTANT' ">
																<md-option *ngFor="let dvCol of ruleObj.dvColumns" [value]="dvCol.id" (click)="headerLine.dataType = dvCol.colDataType;SelectColumn(i,h)">
																	{{ dvCol.columnName }} </md-option>
															</md-select>

															<p class="help-block errorFont validation-error" *ngIf="accRuleForm.hasError('required', 'enterCurrencyColId'+i+h) && ruleGroupService.submitted">Column is required.</p>
															<span class="linetext-input" *ngIf="isViewOnly">{{headerLine.dataViewColumnName}}</span>
														</div>
														<div class="col-md-3">
															<div class="row">
																<!-- <div class="col-md-11" style="top: 27px;" *ngIf="ruleObj.editRule && headerLine.criteria != 'MAPPING_SET' && headerLine.accountingReferencesCode=='LEDGER_NAME' && (!ledgersBasedOnCOA || ledgersBasedOnCOA.length<=0)">
																		<span class="help-block errorFont">
																			Select COA
																		</span>
																	</div> -->
																<div class="col-md-11">
																	<md-select class="md-no-placeholder" [(ngModel)]="headerLine.segValue" [ngClass]="{'color-black' : isViewOnly}" [disabled]="isViewOnly"
																	 name="segValue{{i}}{{h}}" required #segValue{{i}}{{h}}="ngModel" *ngIf="ruleObj.editRule && headerLine.criteria != 'MAPPING_SET' && headerLine.accountingReferencesCode=='LEDGER_NAME'">
																		<md-option *ngFor="let ledger of ledgersBasedOnCOA" [value]="ledger.id">
																			{{ ledger.name}} </md-option>
																	</md-select>
																	<p class="help-block errorFont validation-error"  *ngIf="ruleObj.editRule && headerLine.criteria != 'MAPPING_SET' && headerLine.accountingReferencesCode=='LEDGER_NAME' && accRuleForm.hasError('required', 'segValue'+i+h) && ruleGroupService.submitted">Segment value is required.</p>
																	<p class="help-block errorFont validation-error"  *ngIf="ruleObj.editRule && headerLine.criteria != 'MAPPING_SET' && headerLine.accountingReferencesCode=='LEDGER_NAME' && (!ledgersBasedOnCOA || ledgersBasedOnCOA.length<=0)">Ledger Definitions not found.</p>

																	<md-select class="md-no-placeholder" [(ngModel)]="headerLine.segValue" [ngClass]="{'color-black' : isViewOnly}" [disabled]="isViewOnly"
																	 name="segValue{{i}}{{h}}" required #segValue{{i}}{{h}}="ngModel" *ngIf="ruleObj.editRule&& headerLine.criteria != 'MAPPING_SET' && headerLine.accountingReferencesCode=='SOURCE'">
																		<md-option *ngFor="let source of sourceLOV" [value]="source.lookUpCode">
																			{{ source.meaning}} </md-option>
																	</md-select>
																	<p class="help-block errorFont validation-error"  *ngIf="ruleObj.editRule&& headerLine.criteria != 'MAPPING_SET' && headerLine.accountingReferencesCode=='SOURCE' && accRuleForm.hasError('required', 'segValue'+i+h) && ruleGroupService.submitted">Segment value is required.</p>

																	<md-select class=" md-no-placeholder" [(ngModel)]="headerLine.segValue" [ngClass]="{'color-black' : isViewOnly}" [disabled]="isViewOnly"
																	 name="segValue{{i}}{{h}}" required #segValue{{i}}{{h}}="ngModel" *ngIf="ruleObj.editRule && headerLine.criteria != 'MAPPING_SET' && headerLine.accountingReferencesCode=='CATEGORY'">
																		<md-option *ngFor="let category of categoryLOV" [value]="category.lookUpCode">
																			{{ category.meaning }} </md-option>
																	</md-select>
																	<p class="help-block errorFont validation-error"  *ngIf="ruleObj.editRule && headerLine.criteria != 'MAPPING_SET' && headerLine.accountingReferencesCode=='CATEGORY' && accRuleForm.hasError('required', 'segValue'+i+h) && ruleGroupService.submitted">Segment value is required.</p>

																	<span class="linetext-input" *ngIf="isViewOnly">{{headerLine.segValue}}</span>

																	<md-select class="md-no-placeholder" [(ngModel)]="headerLine.segValue" [ngClass]="{'color-black' : isViewOnly}" [disabled]="isViewOnly"
																	 name="mappingSetId{{i}}{{h}}" placeholder="Select Mapping Set" required #mappingSetId{{i}}{{h}}="ngModel"
																	 *ngIf="ruleObj.editRule && headerLine.criteria == 'MAPPING_SET'">
																		<md-option *ngFor="let mappingSet of mappingSets" [value]="mappingSet.id">
																			{{ mappingSet.name}} </md-option>
																	</md-select>
																	<p class="help-block errorFont validation-error"  *ngIf="ruleObj.editRule && headerLine.criteria == 'MAPPING_SET' && accRuleForm.hasError('required', 'mappingSetId'+i+h) && ruleGroupService.submitted">Segment value is required.</p>
																	<!-- <span class="help-block errorFont">Select COA</span> -->
																	<!-- 	<span class="linetext-input" *ngIf="isViewOnly || (!isViewOnly &&  ruleObj.id)">{{headerLine.segValue}}</span> -->

																</div>
																<div class="col-md-1" style="top:25px;">

																	<!-- <i class="fa fa-filter hand pull-right" aria-hidden="true" mdTooltip="Filter" popoverPlacement="left" [popover]="headerFilters" (click)="headerFilters.show()" *ngIf="headerLine.criteria == 'VIEW_COLUMN'  && !headerLine.value && headerLine.dataViewColumn">
																	</i>
																	<i class="fa fa-filter hand pull-right" aria-hidden="true" mdTooltip="{{headerLine.operatorMeaning}}-{{headerLine.value}}" popoverPlacement="left" [popover]="headerFilters" (click)="headerFilters.show()" *ngIf="headerLine.criteria == 'VIEW_COLUMN' && headerLine.value && headerLine.dataViewColumn">
																	</i> -->
																	<i class="fa fa-filter hand pull-right" aria-hidden="true" mdTooltip="Filter" (click)="addHeaderFilter(i,h)" *ngIf="headerLine.criteria == 'VIEW_COLUMN' && !headerLine.value && headerLine.dataViewColumn">
																	</i>

																	<i class="fa fa-filter hand pull-right" aria-hidden="true" mdTooltip="{{headerLine.operatorMeaning }} - {{headerLine.value}}"
																	 (click)="addHeaderFilter(i,h)" *ngIf="headerLine.criteria == 'VIEW_COLUMN' && headerLine.value && headerLine.dataViewColumn">
																	</i>


																	<!-- <span>
																		
																	</span> -->
																</div>

															</div>


														</div>

													</div>
												</ng-template>
												<!-- </md-card-content> -->
											</div>
											
										<!-- </form> -->

									</md-expansion-panel>
								</md-accordion>
							</div>
							<!-- <div style="margin:10px;" class="child-accordian-shadow md-accordian-row-padding rule-conditions-header-background accounting-rule-child-styles" 
							*ngIf="((((ruleObj.editRule && !isViewOnly && ruleObj.sourceDataViewId) || ((isViewOnly || !ruleObj.editRule) && ruleObj.sourceDataViewName) )
							&& ruleGroupService.ruleGroup.coa) && !ruleCreationInWQ) || (ruleCreationInWQ)">
								<md-accordion class="expansion-panel-border-none padding-bottom-accounting-lines">
									<md-expansion-panel [expanded]="true" class="mat-overflow-unset">
										<md-expansion-panel-header>
											<md-panel-title>
												Line Derivation Rules
											</md-panel-title>
										</md-expansion-panel-header> -->
										<div class="row" *ngIf="((((ruleObj.editRule && !isViewOnly && ruleObj.sourceDataViewId) || ((isViewOnly || !ruleObj.editRule) && ruleObj.sourceDataViewName) )
										&& ruleGroupService.ruleGroup.coa) && !ruleCreationInWQ) || (ruleCreationInWQ)" style="height: 18px;padding-top: 11px;padding-bottom: 5px;">
											<div class="col-md-6">
												<p style="font-weight: bold">
													Line Derivation Rules
												</p>
											</div>

										</div>
										<div class=" accounting-card display-flex rule-conditions-header-background" style="justify-content:space-between;padding-left:0px !important" [ngStyle] *ngIf="((((ruleObj.editRule && !isViewOnly && ruleObj.sourceDataViewId) || ((isViewOnly || !ruleObj.editRule) && ruleObj.sourceDataViewName) )
										&& ruleGroupService.ruleGroup.coa) && !ruleCreationInWQ) || (ruleCreationInWQ)" >
											<div style="width:50%; padding-left:20px;padding-top:10px ;padding-bottom:27px">
												<div class="d-flex justify-content-between" style="height:38px" *ngIf="!isViewOnly && ruleObj.editRule">
													<div class="align-items-center d-flex">
														<p class="m-0">Debit Lines</p>
													</div>
													<div>
														<button md-icon-button class="pull-right md-36" mdTooltip="Add Debit Line" 
														[disabled]="accRuleForm.hasError('required', 'DrlineType'+i+(ruleObj.debitLines.length-1))
														|| accRuleForm.hasError('required', 'DrenteredAmtCol'+i+(ruleObj.debitLines.length-1))"
														(click)="addNewDebitLine(i,ruleObj.debitLines.length)"
														 *ngIf="!isViewOnly && ruleObj.editRule">
															<md-icon>add</md-icon>
														</button>
													</div>
												</div>

												<ng-template ngFor let-lineItem [ngForOf]="ruleObj.debitLines" let-j="index" let-last="last" ;>
													<md-accordion class="expansion-panel-border-none padding-bottom-accounting-lines">
														<md-expansion-panel [expanded]="true" class="mat-overflow-unset">
															<md-expansion-panel-header>
																<md-panel-title>
																	<span *ngIf="lineItem.lineTypeDetailMeaning">{{lineItem.lineTypeDetailMeaning}}{{emptySpace}}</span> line for
																	<span *ngIf="lineItem.enteredAmtColName"> {{emptySpace}}{{lineItem.enteredAmtColName}}</span>
																	
																</md-panel-title>
															</md-expansion-panel-header>
															<div style="padding-bottom:11px; margin-top: -16px;">
																<div class="row" *ngIf="lineItem.lineType == 'DEBIT'" [ngStyle]="{'margin-left':(isViewOnly || !ruleObj.editRule) ? '5px' : '0px'}" style=" margin-top: 20px;">
																	<div class="col-md-4">
																		<md-select placeholder="Accounting Line Type" [(ngModel)]="lineItem.lineTypeDetail" name="DrlineType{{i}}{{j}}" required
																		 #DrlineType{{i}}{{j}}="ngModel" *ngIf="!isViewOnly && ruleObj.editRule">
																			<md-option *ngFor="let lineType of linetypes" [value]="lineType.lookUpCode" (click)="lineItem.lineTypeDetailMeaning=lineType.meaning">
																				{{ lineType.meaning}} </md-option>
																		</md-select>
																		<p class="help-block errorFont validation-error" *ngIf="accRuleForm.hasError('required', 'DrlineType'+i+j) && ruleGroupService.submitted">Line type is required.</p>

																		<md-input-container *ngIf="isViewOnly || !ruleObj.editRule">
																			<input mdInput [(ngModel)]="lineItem.lineTypeDetailMeaning" placeholder="Line Type" [ngClass]="{'color-black' : true}" [disabled]="true"
																			 name="DrlineTypedetail{{i}}{{j}}" required #DrlineTypedetail{{i}}{{j}}="ngModel">
																		</md-input-container>
																	</div>

																	<div class="col-md-4">
																		<!--  has to be decimal filtered -->
																		<md-select placeholder="Entered Amount" [(ngModel)]="lineItem.enteredAmtColId" [ngClass]="{'color-black' : isViewOnly}" name="DrenteredAmtCol{{i}}{{j}}"
																		 required #DrenteredAmtCol{{i}}{{j}}="ngModel" *ngIf="!isViewOnly && ruleObj.editRule">
																		 <ng-container *ngFor="let dvcol of ruleObj.dvColumns" >
																		 <md-option [value]="dvcol.id" (click)="(dvcol.colDataType != 'DECIMAL') ? '' : (lineItem.enteredAmtColName=dvcol.columnName)"
																			 *ngIf="dvcol.colDataType == 'DECIMAL'">
																				{{ dvcol.columnName}} </md-option>
																			</ng-container>
																		</md-select>
																		<p class="help-block errorFont validation-error" *ngIf="accRuleForm.hasError('required', 'DrenteredAmtCol'+i+j) && ruleGroupService.submitted">Entered amount is required.</p>

																		<md-input-container *ngIf="isViewOnly || !ruleObj.editRule">
																			<input mdInput [(ngModel)]="lineItem.enteredAmtColName" placeholder="Entered Amount" [ngClass]="{'color-black' : true}" [disabled]="true"
																			 name="DrenteredAmtCol{{i}}{{j}}" required #DrenteredAmtCol{{i}}{{j}}="ngModel">
																		</md-input-container>
																	</div>

																	<div class="col-md-3">
																			<button md-icon-button class="pull-right " style="top: 2px;" (click)="deleteDebitLineObject(i,j);false" *ngIf="!isViewOnly && !ruleObj.id "
																			mdTooltip="Delete Debit">
																			   <md-icon>delete</md-icon>
																		   </button>
																		<!-- <button md-icon-button class="pull-right" style="top:20px;" (click)="addDebitLineCondition(i,j)" id="showIcon" *ngIf="!isViewOnly && !ruleObj.id "
																															 mdTooltip="Build Condition">
																																<md-icon>call_split</md-icon>
																															</button>
												
																															<button md-icon-button class="pull-right" style="top:20px;" popoverTitle="Conditions" (mouseenter)="debitruleConditions.show()"
																															 [popover]=debitruleConditions *ngIf=" (isViewOnly || (!isViewOnly && ruleObj.id) ) && lineItem.accountingRuleConditions.length>0">
																																<md-icon>info</md-icon>
																															</button> -->

																		<!-- <popover-content #debitruleConditions placement="left" [animation]="true" style="z-index: 999 !important;width:250px;height:200px">
																													
																													</popover-content> -->
																	</div>

																</div>
																<div class="div-border-styles remove-tab-underline" style="margin-top: 8px;padding-left: 8px;">

																	<!-- <br *ngIf="lineItem.lineType == 'DEBIT'"> -->
																	<md-tab-group class="ruleGrpType-status-tabs" style="border-bottom: 0px solid rgba(0, 0, 0, 0.12) !important ; float:left!important"
																	 (focusChange)="switchDebitTabs($event,i,j)" [selectedIndex]="lineItem.lineSelectedIndex">
																		<md-tab>
																			<ng-template md-tab-label>
																				Derivations
																			</ng-template>

																		</md-tab>
																		<md-tab>
																			<ng-template md-tab-label>
																				Conditions({{lineItem.accountingRuleConditions.length}})
																			</ng-template>

																		</md-tab>
																	</md-tab-group>
																	<!-- <div class="demo-tab-content"> -->

																	<div class="table-responsive table-header-styles" *ngIf="lineItem.lineType == 'DEBIT' && lineItem.lineSelectedIndex==0" style="padding-top: 14px;">

																		<table class="table" *ngIf="isViewOnly || !ruleObj.editRule">
																			<thead class="text-nowrap">
																				<tr>
																					<th>Segment</th>
																					<th>Criteria</th>
																					<th>Column</th>
																					<th>Value</th>
																				</tr>

																			</thead>
																			<tbody class="">
																				<tr *ngFor="let ARD of lineItem.accountingRuleDerivations; let drd = index">
																					<td>
																						<span class="linetext-input">{{ARD.accountingReferencesMeaning}}</span>
																					</td>
																					<td>
																						<span class="linetext-input">{{ARD.criteriaMeaning}}</span>
																					</td>
																					<td>
																						<span class="linetext-input">{{ARD.dataViewColumnName}}</span>
																					</td>
																					<!-- <td>
																																				<span class="linetext-input">{{ARD.operatorMeaning}}</span>
																																			</td>
																																			<td>
																																				<span class="linetext-input">{{ARD.value}}</span>
																																				<span class="linetext-input">{{ARD.mappingSetName}}</span>
																																			</td> -->
																					<td>
																						<span class="linetext-input" *ngIf="ARD.criteria != 'MAPPING_SET'">{{ARD.segValue}}</span>
																						<span class="linetext-input" *ngIf="ARD.criteria == 'MAPPING_SET'">{{ARD.segValueMeaning}}</span>
																						<!-- <span class="linetext-input">{{ARD.constantValue}}</span> -->
																					</td>
																					<td>

																						<!-- <i class="fa fa-filter hand pull-right" aria-hidden="true" mdTooltip="Filter" (click)="addDebitLineFilter(i,j,drd)" *ngIf="ARD.criteria == 'VIEW_COLUMN' && !ARD.value && ARD.dataViewColumn">
																														</i>
											
																														<i class="fa fa-filter hand pull-right" aria-hidden="true" mdTooltip="{{ARD.operatorMeaning }} - {{ARD.value}}"
																																 (click)="addDebitLineFilter(i,j,drd)" *ngIf="ARD.criteria == 'VIEW_COLUMN' && ARD.value && ARD.dataViewColumn">
																														</i> -->
																						<i class="fa fa-filter hand pull-right" aria-hidden="true" popoverPlacement="left" [popover]="lineFilters" (click)="lineFilters.show()"
																						 mdTooltip="{{ARD.operatorMeaning}}-{{ARD.value}}" *ngIf="ARD.criteria == 'VIEW_COLUMN'">
																						</i>
																						<popover-content #lineFilters placement="right" [animation]="true" [closeOnClickOutside]="false" style="z-index: 999 !important;width:200px;height:80px">

																							<div class="row">
																								<div class="col-md-12">
																									<i class="pull-right fa fa-times hand" aria-hidden="true" mdTooltip="Close" (click)="lineFilters.hide();">
																									</i>
																									<div class="table-responsive table-header-styles">
																										<table>
																											<thead>
																												<tr>
																													<th>Operator</th>
																													<th>Value</th>
																												</tr>
																											</thead>
																											<tbody>
																												<tr>
																													<td>
																														<span class="linetext-input">{{ARD.operatorMeaning}}</span>

																													</td>
																													<td>
																														<span class="linetext-input">{{ARD.value}}</span>

																													</td>
																												</tr>
																											</tbody>
																										</table>
																									</div>
																								</div>
																							</div>

																						</popover-content>
																					</td>
																				</tr>
																			</tbody>
																		</table>

																		<table class="table table-header-styles" *ngIf="!isViewOnly && ruleObj.editRule">
																			<thead class="text-nowrap">
																				<tr>
																					<th style="width:200px;">Segment</th>
																					<th style="width:50px;">Criteria*</th>
																					<th style="width:200px">Column*</th>
																					<th style="width:250px">Value*</th>
																				</tr>

																			</thead>
																			<tbody class="text-	nowrap">
																				<tr *ngFor="let ARD of lineItem.accountingRuleDerivations; let drd = index">
																					<td style="width:200px;">
																						<span style="top: 24px" class="linetext-input">{{ARD.accountingReferencesMeaning}}</span>
																					</td>
																					<td  style="width:50px" >
																						<md-select class="md-no-placeholder" [(ngModel)]="ARD.criteria" (change)="selectDebitCriteria(i,j,drd)" [disabled]="!ruleObj.editRule"
																						 name="Drcriteria{{i}}{{j}}{{drd}}" #Drcriteria{{i}}{{j}}{{drd}}="ngModel" *ngIf="!isViewOnly">
																							<md-option *ngFor="let criteria of accCriterias" [value]="criteria.lookUpCode">
																								{{ criteria.meaning }} </md-option>
																						</md-select>
																						<p class="help-block errorFont validation-error"  *ngIf="accRuleForm.hasError('required', 'Drcriteria'+i+j+drd) && ruleGroupService.submitted">Criteria is required.</p>

																					</td>
																					<td  style="width:200px">
																						<md-select class="md-no-placeholder"  style="width:200px" [(ngModel)]="ARD.dataViewColumn" [disabled]="!ruleObj.editRule"
																						 name="DrdataViewColumn{{i}}{{j}}{{drd}}" #DrdataViewColumn{{i}}{{j}}{{drd}}="ngModel" *ngIf="!isViewOnly && ARD.criteria != 'CONSTANT'">
																							<md-option *ngFor="let dvCol of ruleObj.dvColumns" [value]="dvCol.id" (click)="ARD.dataType = dvCol.colDataType;SelectDebitLineLevelColumn(i,j,drd)">
																								{{ dvCol.columnName}} </md-option>
																						</md-select>
																						<p class="help-block errorFont validation-error" *ngIf="accRuleForm.hasError('required', 'DrdataViewColumn'+i+j+drd) && ruleGroupService.submitted">Column is required.</p>
																					</td>
																					<td  style="width:300px" *ngIf="!isViewOnly && ruleObj.editRule && ARD.criteria != 'MAPPING_SET' && (!ARD.valueSet || ARD.valueSet.length<=0)">
																						<span class="linetext-input" style="top: 24px;">No Value Set defined</span>
																					</td>

																					<td  style="width:250px">
																						<!-- <md-input-container class="example-full-width" *ngIf="!isViewOnly && ARD.criteria != 'MAPPING_SET'">
																																						<input class="inputHeight" mdInput [(ngModel)]="ARD.segValue" [ngClass]="{'color-black' : true }" name="constantValue{{i}}{{j}}{{drd}}"
																																						 required #constantValue{{i}}{{j}}{{drd}}="ngModel">
																																					</md-input-container> -->
																						<md-select class="md-no-placeholder"  style="width:250px" [(ngModel)]="ARD.segValue" [disabled]="!ruleObj.editRule" name="DrconstantValue{{i}}{{j}}{{drd}}"
																						 #DrconstantValue{{i}}{{j}}{{drd}}="ngModel" *ngIf="!isViewOnly && ruleObj.editRule && ARD.criteria != 'MAPPING_SET' && ARD.valueSet && ARD.valueSet.length>0">
																							<md-option *ngFor="let value of  ARD.valueSet" [value]="value[0]">
																								{{ value[1]}} </md-option>
																						</md-select>
																						<p class="help-block errorFont validation-error" *ngIf="!isViewOnly && ruleObj.editRule && ARD.criteria != 'MAPPING_SET' && ARD.valueSet && ARD.valueSet.length>0 && accRuleForm.hasError('required', 'DrconstantValue'+i+j+drd) && ruleGroupService.submitted">Segment value is required.</p>

																						<!-- <md-select class="example-full-width" [(ngModel)]="ARD.segValue" [disabled]="(ruleObj.id)" name="segValue{{i}}{{j}}{{drd}}"
																																				 required #segValue{{i}}{{j}}{{drd}}="ngModel" *ngIf="!isViewOnly &&  (!ruleObj.id) && ARD.criteria == 'VIEW_COLUMN'">
																																					<md-option *ngFor="let ledger of ledgers" [value]="ledger.id">
																																						{{ ledger.name}} </md-option>
																																				</md-select> -->
																						<md-select class="md-no-placeholder"  style="width:250px" [(ngModel)]="ARD.segValue" [disabled]="!ruleObj.editRule || isViewOnly" name="DrmappingSetId{{i}}{{j}}{{drd}}"
																						 placeholder="Select Mapping Set" #DrmappingSetId{{i}}{{j}}{{drd}}="ngModel" *ngIf="!isViewOnly &&  ruleObj.editRule && ARD.criteria == 'MAPPING_SET'">
																							<md-option *ngFor="let mappingSet of mappingSets" [value]="mappingSet.id">
																								{{ mappingSet.name}} </md-option>
																						</md-select>
																						<p class="help-block errorFont validation-error"  *ngIf="!isViewOnly &&  ruleObj.editRule && ARD.criteria == 'MAPPING_SET' && accRuleForm.hasError('required', 'DrmappingSetId'+i+j+drd) && ruleGroupService.submitted">Segment value is required.</p>
																					</td>
																					<td *ngIf="ARD.criteria == 'VIEW_COLUMN' ">
																						<i class="fa fa-filter hand pull-right" aria-hidden="true" mdTooltip="Filter" (click)="addDebitLineFilter(i,j,drd)" *ngIf="ARD.criteria == 'VIEW_COLUMN' && !ARD.value && ARD.dataViewColumn">
																						</i>

																						<i class="fa fa-filter hand pull-right" aria-hidden="true" mdTooltip="{{ARD.operatorMeaning }} - {{ARD.value}}" (click)="addDebitLineFilter(i,j,drd)" *ngIf="ARD.criteria == 'VIEW_COLUMN' && ARD.value && ARD.dataViewColumn">
																						</i>

																						<!-- <i class="fa fa-filter hand pull-right" aria-hidden="true" popoverPlacement="left" [popover]="lineFilters" (click)="lineFilters.show()"
																																	 mdTooltip="{{ARD.operatorMeaning}}-{{ARD.value}}" *ngIf="ARD.criteria == 'VIEW_COLUMN'">
																																	</i>
											
																																	<popover-content #lineFilters placement="right" [animation]="true" [closeOnClickOutside]="false" style="z-index: 999 !important;width:250px;height:80px">
											
																																		<div class="row">
																																			<div class="col-md-12">
																																				<i class="pull-right fa fa-times hand" aria-hidden="true" mdTooltip="Close" (click)="lineFilters.hide();">
																																				</i>
																																				<div class="table-responsive">
																																					<table>
																																						<thead>
																																							<tr>
																																								<th style="width:50px;">Operator</th>
																																								<th>Value</th>
																																							</tr>
																																						</thead>
																																						<tbody>
																																							<tr>
																																								<td style="width:50px;">
											
																																									<md-select class="md-no-placeholder" [(ngModel)]="ARD.operator" [disabled]="isViewOnly || !ruleObj.editRule" name="Droperator{{i}}{{j}}{{drd}}"
																																									 required #Droperator{{i}}{{j}}{{drd}}="ngModel" *ngIf="!isViewOnly && ruleObj.editRule &&  debitLineLevelOperatorsLOV && debitLineLevelOperatorsLOV[i] && debitLineLevelOperatorsLOV[i][j] && debitLineLevelOperatorsLOV[i][j][drd] && ARD.criteria == 'VIEW_COLUMN'">
																																										<md-option *ngFor="let operator of debitLineLevelOperatorsLOV[i][j][drd]" [value]="operator.lookUpCode"> {{ operator.meaning}} </md-option>
																																									</md-select>
																																								
																																								</td>
																																								<td>
																																									<md-input-container class="example-full-width" *ngIf="!isViewOnly && ARD.criteria == 'VIEW_COLUMN'">
																																										<input class="inputHeight" mdInput [(ngModel)]="ARD.value" [ngClass]="{'color-black' : true }" name="Drvalue{{i}}{{j}}{{drd}}"
																																										 required #Drvalue{{i}}{{j}}{{drd}}="ngModel">
																																									</md-input-container>
											
											
																																								</td>
																																							</tr>
																																						</tbody>
																																					</table>
																																				</div>
																																			</div>
																																		</div>
											
																																	</popover-content> -->
																					</td>

																				</tr>
																			</tbody>
																		</table>

																	</div>
																	<!-- </div> -->
																	<!-- <div class="demo-tab-content"> -->
																	<div class="table-responsive table-header-styles" *ngIf="lineItem.lineType == 'DEBIT' && lineItem.lineSelectedIndex==1" style="padding-top: 14px;">

																		<table class="table" *ngIf="isViewOnly || !ruleObj.editRule">
																			<thead>
																				<tr>
																					<th>Sequence</th>
																					<th>Column</th>
																					<th>Operator</th>
																					<th>Value</th>
																				</tr>

																			</thead>
																			<tbody class="scrolllit">
																				<tr *ngFor="let condition of lineItem.accountingRuleConditions;let debitRC=index">
																					<td>{{debitRC+1}}</td>
																					<td>{{condition.sViewColumnName}}</td>
																					<td>{{condition.operatorMeaning}}</td>
																					<td>{{condition.value}}</td>
																				</tr>
																			</tbody>
																		</table>
																		<span *ngIf="!isViewOnly && ruleObj.editRule && (!lineItem.accountingRuleConditions || lineItem.accountingRuleConditions.length==0)">Add New Condition
																			<button md-icon-button mdTooltip="Add New Condition" (click)="addMappingCriteriaForDebitLines(i,j,lineItem.accountingRuleConditions.length)">
																				<md-icon>exposure_plus_1</md-icon>
																			</button>
																		</span>
																		<table class="table" *ngIf="!isViewOnly && ruleObj.editRule && lineItem.accountingRuleConditions.length>0">
																			<thead class="text-nowrap">
																				<tr>
																					<th style="width:50px;">Sequence</th>
																					<th style="width:200px;">Column</th>
																					<th style="width:200px;">Operator</th>
																					<th >Value</th>
																					<th>
																						<button md-icon-button mdTooltip="Add New Condition" (click)="addMappingCriteriaForDebitLines(i,j,lineItem.accountingRuleConditions.length)">
																							<md-icon>exposure_plus_1</md-icon>
																						</button>
																					</th>
																				</tr>

																			</thead>
																			<tbody class="text-nowrap">
																				<tr *ngFor="let condition of lineItem.accountingRuleConditions;let rc=index">
																					<td>
																						<span class="linetext-input" style="top:24px;" *ngIf="!isViewOnly && ruleObj.editRule">{{rc+1}}</span>
																					</td>
																					<td>
																						<md-select style="width:200px;" class="md-no-placeholder" [(ngModel)]="condition.sViewColumnId" [ngClass]="{'color-black' : true}" name="DrsViewColumnId{{i}}{{j}}{{rc}}"
																						 #DrsViewColumnId{{i}}{{j}}{{rc}}="ngModel" *ngIf="!isViewOnly && ruleObj.editRule">
																							<md-option *ngFor="let col of ruleObj.dvColumns" [value]="col.id" (click)="SelectDebitLineConditionColumn(i,j,rc,col.colDataType, col.columnName)">
																								{{ col.columnName}} </md-option>
																						</md-select>
																					</td>
																					<td>
																						<md-select  style="width:200px;" class="md-no-placeholder" [(ngModel)]="condition.operator" [ngClass]="{'color-black' : isViewOnly}" name="DroperatorLovForConditions{{i}}{{j}}{{rc}}"
																						 required #DroperatorLovForConditions{{i}}{{j}}{{rc}}="ngModel" *ngIf="!isViewOnly && ruleObj.editRule">
																							<md-option *ngFor="let operator of condition.operatorList" [value]="operator.lookUpCode" (click)="condition.operatorMeaning=operator.meaning">
																								{{ operator.meaning}} </md-option>
																						</md-select>
																						<p class="help-block errorFont validation-error"  *ngIf="accRuleForm.hasError('required', 'Drvalue'+i+j+drd) && ruleGroupService.submitted">Operator is required.</p>
																					</td>
																					<td>
																						<md-input-container *ngIf="!isViewOnly && ruleObj.editRule">
																							<input class="inputHeight" mdInput [(ngModel)]="condition.value" name="Drvalue{{i}}{{j}}{{rc}}" required #Drvalue{{i}}{{j}}{{rc}}="ngModel">
																						</md-input-container>
																						<p class="help-block errorFont validation-error" *ngIf="accRuleForm.hasError('required', 'Drvalue'+i+j+drd) && ruleGroupService.submitted">Value is required.</p>
																					</td>
																					<td>
																						<button md-icon-button *ngIf="!isViewOnly && !ruleObj.id   && ruleObj.editRule" (click)="deleteDebitRuleCondition(i,j,rc)"
																						 mdTooltip="Delete condition">
																							<md-icon>delete</md-icon>
																						</button>

																					</td>
																				</tr>
																			</tbody>
																		</table>
																	</div>

																	<!-- </div> -->


																</div>
															</div>

														</md-expansion-panel>

													</md-accordion>

												</ng-template>

											</div>

											<div style="width:50%;padding-left: 10px;padding-top: 10px;padding-right: 10px;padding-bottom:27px">
												<div class="d-flex justify-content-between" style="height:38px" *ngIf="!isViewOnly && ruleObj.editRule">
													<div class="align-items-center d-flex">
														<p class="m-0">Credit Lines</p>
													</div>
													<div style="margin-right:14px">
														<button md-icon-button mdTooltip="Add Credit Line" (click)="addNewCreditLine(i,ruleObj.creditLines.length)"
														
														[disabled]="accRuleForm.hasError('required', 'lineType'+i+(ruleObj.creditLines.length-1))
														|| accRuleForm.hasError('required', 'crEnteredAmtCol'+i+(ruleObj.creditLines.length-1))"
														*ngIf="!isViewOnly && ruleObj.editRule">
															<md-icon>add</md-icon>
														</button>

														<!-- <button md-icon-button mdTooltip="Switch view" (click)="changeView(i)" *ngIf="ruleGroupService.ruleGroup.coa && debitCreditLineSize.search('12') == -1">
															<md-icon>menu</md-icon>
														</button>
														<button md-icon-button mdTooltip="Switch to list" (click)="changeView(i)" *ngIf="ruleGroupService.ruleGroup.coa && debitCreditLineSize.search('12') != -1">
															<md-icon>apps</md-icon>
														</button> -->
													</div>
												</div>

												<ng-template ngFor let-lineItem [ngForOf]="ruleObj.creditLines" let-k="index" let-lastIndex="last">
													<md-accordion class="credit-lines-padding-right expansion-panel-border-none padding-bottom-accounting-lines">
														<md-expansion-panel style="margin-right:14px" [expanded]="true" class="mat-overflow-unset">
															<md-expansion-panel-header>
																<md-panel-title>
																	<span *ngIf="lineItem.lineTypeDetailMeaning">{{lineItem.lineTypeDetailMeaning}}{{emptySpace}}</span> line for
																	<span *ngIf="lineItem.enteredAmtColName">{{emptySpace}} {{lineItem.enteredAmtColName}}</span>
																	
																</md-panel-title>
															</md-expansion-panel-header>
															<div style="padding-bottom:11px; margin-top: -16px;">
																<div class="row" *ngIf="lineItem.lineType == 'CREDIT'" [ngStyle]="{'margin-left':(isViewOnly || !ruleObj.editRule) ? '5px' : '0px'}" style=" margin-top: 20px;">
																	<div class="col-md-4">
																		<md-select placeholder="Accounting Line Type" [(ngModel)]="lineItem.lineTypeDetail" [disabled]="!ruleObj.editRule || isViewOnly"
																		 name="CrlineType{{i}}{{k}}" required #CrlineType{{i}}{{k}}="ngModel" *ngIf="!isViewOnly && ruleObj.editRule">
																			<md-option *ngFor="let lineType of linetypes" [value]="lineType.lookUpCode" (click)="lineItem.lineTypeDetailMeaning=lineType.meaning">
																				{{ lineType.meaning}} </md-option>
																		</md-select>
																		<p class="help-block errorFont validation-error" *ngIf="accRuleForm.hasError('required', 'lineType'+i+k) && ruleGroupService.submitted">Line type is required.</p>

																		<md-input-container *ngIf="isViewOnly || !ruleObj.editRule">
																			<input mdInput [(ngModel)]="lineItem.lineTypeDetailMeaning" placeholder="Line Type" [ngClass]="{'color-black' : true}" [disabled]="true"
																			 name="lineTypeDetail{{i}}{{k}}" required #lineTypeDetail{{i}}{{k}}="ngModel">
																		</md-input-container>

																	</div>

																	<div class="col-md-4">
																		<!--  has to be decimal filtered -->
																		<md-select placeholder="Entered Amount" [(ngModel)]="lineItem.enteredAmtColId" name="crEnteredAmtCol{{i}}{{k}}" required
																		 #crEnteredAmtCol{{i}}{{k}}="ngModel" *ngIf="!isViewOnly && ruleObj.editRule">
																		<ng-container  *ngFor="let dvcol of ruleObj.dvColumns">
																			<md-option [value]="dvcol.id" *ngIf="dvcol.colDataType == 'DECIMAL'" (click)="(dvcol.colDataType != 'DECIMAL')? '' : (lineItem.enteredAmtColName=dvcol.columnName)">
																				{{ dvcol.columnName}} </md-option>
																		</ng-container>	
																		
																		</md-select>
																		<p class="help-block errorFont validation-error" *ngIf="accRuleForm.hasError('required', 'crEnteredAmtCol'+i+k) && ruleGroupService.submitted">Entered amount is required.</p>

																		<md-input-container *ngIf="isViewOnly || !ruleObj.editRule">
																			<input mdInput [(ngModel)]="lineItem.enteredAmtColName" placeholder="Entered Amount" [ngClass]="{'color-black' : true}" [disabled]="true"
																			 name="crEnteredAmtCol{{i}}{{k}}" required #crEnteredAmtCol{{i}}{{k}}="ngModel">
																		</md-input-container>
																	</div>

																	<div class="col-md-3">
																			<button md-icon-button class="pull-right " style="top: 2px;" (click)="deleteCreditLineObject(i,k);false" *ngIf="!isViewOnly && !ruleObj.id &&  ruleObj.editRule "
																			mdTooltip="Delete Credit Line">
																			   <md-icon>delete</md-icon>
																		   </button>
																		<!-- <button md-icon-button style="top:20px;" class="pull-right" (click)="addCreditLineCondition(i,k)" id="showIcon" *ngIf="!isViewOnly && !ruleObj.id "
																															 mdTooltip="Build Condition">
																																<md-icon>call_split</md-icon>
																															</button> -->
																		<!-- <i class="fa fa-copy hand pull-right" style="font-size: 20px;	font-weight: bold;margin-top: 30px;" aria-hidden="true" (click)="copyLineItem(i,k)"
																		 mdTooltip="Copy from debit" *ngIf="!isViewOnly && ruleObj.editRule ">
																		</i> -->
																		<button md-icon-button class="pull-right" style="font-size: 17px;" *ngIf="!isViewOnly && ruleObj.editRule " 
																		[disabled]="accRuleForm.hasError('required', 'DrlineType'+i+(ruleObj.debitLines.length-1))	|| accRuleForm.hasError('required', 'DrenteredAmtCol'+i+(ruleObj.debitLines.length-1))"
																		mdTooltip="Copy from debit"
																		(click)="copyLineItem(i,k)">
									   										<md-icon>content_copy</md-icon>
								   										</button>
																		<!-- <button md-icon-button class="pull-right" style="top:20px;" popoverTitle="Conditions" (mouseenter)="creditRuleConditions.show()"
																															 [popover]=creditRuleConditions *ngIf="( isViewOnly || (!isViewOnly && ruleObj.id>0)) && lineItem.accountingRuleConditions.length>0">
																																<md-icon>info</md-icon>
																															</button> -->
																		<popover-content #creditRuleConditions placement="left" [animation]="true" [closeOnClickOutside]="true" style="z-index: 999 !important;height:200px">
																			<div class="table-responsive table-header-styles">
																				<table class="table">
																					<thead style="word-wrap: break-word;">
																						<tr>
																							<th>Sequence</th>
																							<th>Column</th>
																							<th style="width:50%">Operator</th>
																							<th>Value</th>
																						</tr>

																					</thead>
																					<tbody style="word-wrap: break-word;">
																						<tr *ngFor="let condition of lineItem.accountingRuleConditions;let creditRC=index">
																							<td>{{creditRC+1}}</td>
																							<td>{{condition.sViewColumnName}}</td>
																							<td style="width:50%">{{condition.operatorMeaning}}</td>
																							<td>{{condition.value}}</td>
																						</tr>
																					</tbody>
																				</table>
																			</div>
																		</popover-content>

																	</div>
																	<div class="col-md-2">

																	</div>
																</div>
																<div class="div-border-styles remove-tab-underline"  style="margin-top: 8px;padding-left: 8px;">

																	<!-- <br *ngIf="lineItem.lineType == 'CREDIT'"> -->
																	<md-tab-group class="ruleGrpType-status-tabs" style="border-bottom: 0px solid rgba(0, 0, 0, 0.12) !important ; float:left!important"
																	 (focusChange)="switchCreditTabs($event,i,k)" [selectedIndex]="lineItem.lineSelectedIndex">
																		<md-tab>
																			<ng-template md-tab-label>
																				Derivations
																			</ng-template>

																		</md-tab>
																		<md-tab>
																			<ng-template md-tab-label>
																				Conditions({{lineItem.accountingRuleConditions.length}})
																			</ng-template>

																		</md-tab>
																	</md-tab-group>
																	<div class="table-responsive table-header-styles" *ngIf="lineItem.lineType == 'CREDIT'  && lineItem.lineSelectedIndex==0" style="padding-top: 14px;">
																		<table class="table" *ngIf="isViewOnly || !ruleObj.editRule">
																			<thead class="text-nowrap">
																				<tr>
																					<th>Segment</th>
																					<th>Criteria</th>
																					<th>Column</th>
																					<th>Value</th>
																				</tr>

																			</thead>
																			<tbody>
																				<tr *ngFor="let CARD of lineItem.accountingRuleDerivations; let crd = index">
																					<td>
																						<span class="linetext-input">{{CARD.accountingReferencesMeaning}}</span>
																					</td>
																					<td>
																						<span class="linetext-input">{{CARD.criteriaMeaning}}</span>
																					</td>
																					<td>
																						<span class="linetext-input">{{CARD.dataViewColumnName}}</span>
																					</td>
																					<!-- <td>
																																<span class="linetext-input">{{CARD.operatorMeaning}}</span>
																															</td>
																															<td>
																																<span class="linetext-input">{{CARD.value}}</span>
																																<span class="linetext-input">{{CARD.mappingSetName}}</span>
																															</td> -->
																					<td>
																						<span class="linetext-input" *ngIf="CARD.criteria != 'MAPPING_SET'">{{CARD.segValue}}</span>
																						<span class="linetext-input" *ngIf="CARD.criteria == 'MAPPING_SET'">{{CARD.segValueMeaning}}</span>
																						<!-- <span class="linetext-input">{{CARD.constantValue}}</span> -->
																					</td>

																					<td>

																						<!-- <i class="fa fa-filter hand pull-right" aria-hidden="true" mdTooltip="Filter" (click)="addCreditLineFilter(i,k,crd)" *ngIf="CARD.criteria == 'VIEW_COLUMN' && !CARD.value && CARD.dataViewColumn">
																																			</i>
																
																																			<i class="fa fa-filter hand pull-right" aria-hidden="true" mdTooltip="{{CARD.operatorMeaning }} - {{CARD.value}}"
																																					 (click)="addCreditLineFilter(i,k,crd)" *ngIf="CARD.criteria == 'VIEW_COLUMN' && CARD.value && CARD.dataViewColumn">
																																			</i> -->

																						<i class="fa fa-filter hand pull-right" aria-hidden="true" popoverPlacement="left" [popover]="lineFilters" (click)="lineFilters.show()"
																						 mdTooltip="{{CARD.operatorMeaning}}-{{CARD.value}}" *ngIf="CARD.criteria == 'VIEW_COLUMN'">
																						</i>
																						<popover-content #lineFilters placement="right" [animation]="true" [closeOnClickOutside]="false" style="z-index: 999 !important;width:200px;height:80px">

																							<div class="row">
																								<div class="col-md-12">
																									<i class="pull-right fa fa-times hand" aria-hidden="true" mdTooltip="Close" (click)="lineFilters.hide();">
																									</i>
																									<div class="table-responsive table-header-styles">
																										<table>
																											<thead>
																												<tr>
																													<th>Operator</th>
																													<th>Value</th>
																												</tr>
																											</thead>
																											<tbody style="word-wrap: break-word;">
																												<tr>
																													<td>
																														<span class="linetext-input">{{CARD.operatorMeaning}}</span>

																													</td>
																													<td>
																														<span class="linetext-input">{{CARD.value}}</span>

																													</td>
																												</tr>
																											</tbody>
																										</table>
																									</div>
																								</div>
																							</div>

																						</popover-content>
																					</td>
																				</tr>
																			</tbody>
																		</table>
																		<table class="table" *ngIf="!isViewOnly && ruleObj.editRule && lineItem.lineSelectedIndex==0" style="padding: 19px 10px;">
																			<thead class="text-nowrap">
																				<tr>
																					<th style="width:200px;">Segment</th>
																					<th style="width:50px;">Criteria*</th>
																					<th  style="width:200px;">Column*</th>
																					<th  style="width:250px;">Value*</th>
																				</tr>

																			</thead>
																			<tbody class="text-	nowrap">
																				<tr *ngFor="let CARD of lineItem.accountingRuleDerivations; let crd = index">
																					<td style="width:200px;">
																						<span style="top: 24px" class="linetext-input" *ngIf="CARD.accountingReferencesMeaning">{{CARD.accountingReferencesMeaning}}</span>
																					</td>
																					<td style="width:50px;">
																						<md-select class="md-no-placeholder" [(ngModel)]="CARD.criteria" (change)="selectCreditCriteria(i,k,crd)" [ngClass]="{'color-black' : isViewOnly}"
																						 [disabled]="isViewOnly || !ruleObj.editRule" name="criteria{{i}}{{k}}{{crd}}" required #criteria{{i}}{{k}}{{crd}}="ngModel"
																						 *ngIf="!isViewOnly">
																							<md-option *ngFor="let criteria of accCriterias" [value]="criteria.lookUpCode">
																								{{ criteria.meaning }} </md-option>
																						</md-select>
																						<p class="help-block errorFont validation-error" *ngIf="accRuleForm.hasError('required', 'criteria'+i+k+crd) && ruleGroupService.submitted">Criteria is required.</p>

																						<md-input-container *ngIf="isViewOnly">
																							<input mdInput [(ngModel)]="CARD.criteriaMeaning" [ngClass]="{'color-black' : true}" [disabled]="true" name="criteria{{i}}{{k}}{{crd}}"
																							 required #criteria{{i}}{{k}}{{crd}}="ngModel">
																						</md-input-container>
																					</td>
																					<td style="width:200px;">
																						<md-select class="md-no-placeholder" style="width:200px;" [(ngModel)]="CARD.dataViewColumn" [ngClass]="{'color-black' : isViewOnly}"
																						 [disabled]="isViewOnly || !ruleObj.editRule" name="dataViewColumn{{i}}{{k}}{{crd}}" #dataViewColumn{{i}}{{k}}{{crd}}="ngModel"
																						 *ngIf="!isViewOnly && CARD.criteria != 'CONSTANT'">
																							<md-option *ngFor="let dvCol of ruleObj.dvColumns" [value]="dvCol.id" (click)="CARD.dataType = dvCol.colDataType;SelectCreditLineLevelColumn(i,k,crd)">
																								{{ dvCol.columnName}} </md-option>
																						</md-select>
																						<p class="help-block errorFont validation-error" *ngIf="accRuleForm.hasError('required', 'dataViewColumn'+i+k+crd) && ruleGroupService.submitted">Column is required.</p>
																					</td>
																					<td style="width:300px;" *ngIf="!isViewOnly && ruleObj.editRule && CARD.criteria != 'MAPPING_SET' && (!CARD.valueSet || CARD.valueSet.length<=0)">
																						<span class="linetext-input" style="top: 24px;">No Value Set defined</span>
																					</td>
																					<td style="width:250px;">
																						<!-- 	<md-input-container class="example-full-width" *ngIf="!isViewOnly && CARD.criteria != 'MAPPING_SET'">
																																		<input class="inputHeight" mdInput [(ngModel)]="CARD.segValue" [ngClass]="{'color-black' : true }" [disabled]="isViewOnly"
																																		 name="constantValue{{i}}{{k}}{{crd}}" required #constantValue{{i}}{{k}}{{crd}}="ngModel">
																																	</md-input-container> -->
																						<md-select class="md-no-placeholder" style="width:250px;" [(ngModel)]="CARD.segValue" [disabled]="!ruleObj.editRule" name="constantValue{{i}}{{k}}{{crd}}"
																						 required #constantValue{{i}}{{k}}{{crd}}="ngModel" *ngIf="!isViewOnly && ruleObj.editRule&& CARD.criteria != 'MAPPING_SET' && CARD.valueSet && CARD.valueSet.length>0">
																							<md-option *ngFor="let value of  CARD.valueSet" [value]="value[0]">
																								{{ value[1]}} </md-option>
																						</md-select>
																						<p class="help-block errorFont validation-error"  *ngIf="accRuleForm.hasError('required', 'constantValue'+i+k+crd) && ruleGroupService.submitted">Segment value is required.</p>
																						<!-- <md-select class="example-full-width" [(ngModel)]="CARD.segValue" [ngClass]="{'color-black' : isViewOnly}" [disabled]="isViewOnly || (ruleObj.id)"
																																 name="segValue{{i}}{{k}}{{crd}}" required #segValue{{i}}{{k}}{{crd}}="ngModel" *ngIf="!isViewOnly &&  (!ruleObj.id) && CARD.criteria == 'VIEW_COLUMN'">
																																	<md-option *ngFor="let ledger of ledgers" [value]="ledger.id">
																																		{{ ledger.name}} </md-option>
																																</md-select> -->
																						<md-select class="md-no-placeholder" style="width:250px;" [(ngModel)]="CARD.segValue" [ngClass]="{'color-black' : isViewOnly}" [disabled]="isViewOnly || !ruleObj.editRule"
																						 name="mappingSetId{{i}}{{k}}{{crd}}" placeholder="Select Mapping Set" required #mappingSetId{{i}}{{k}}{{crd}}="ngModel"
																						 *ngIf="!isViewOnly &&  ruleObj.editRule&& CARD.criteria == 'MAPPING_SET'">
																							<md-option *ngFor="let mappingSet of mappingSets" [value]="mappingSet.id">
																								{{ mappingSet.name}} </md-option>
																						</md-select>
																						<p class="help-block errorFont validation-error" *ngIf="accRuleForm.hasError('required', 'mappingSetId'+i+k+crd) && ruleGroupService.submitted">Segment value is required.</p>
																					</td>

																					<td *ngIf="CARD.criteria == 'VIEW_COLUMN' ">

																						<i class="fa fa-filter hand pull-right" aria-hidden="true" mdTooltip="Filter" (click)="addCreditLineFilter(i,k,crd)" *ngIf="CARD.criteria == 'VIEW_COLUMN' && !CARD.value && CARD.dataViewColumn">
																						</i>

																						<i class="fa fa-filter hand pull-right" aria-hidden="true" mdTooltip="{{CARD.operatorMeaning }} - {{CARD.value}}" (click)="addCreditLineFilter(i,k,crd)"
																						 *ngIf="CARD.criteria == 'VIEW_COLUMN' && CARD.value && CARD.dataViewColumn">
																						</i>

																						<!-- <i class="fa fa-filter hand pull-right" aria-hidden="true" popoverPlacement="left" [popover]="creditLineFilters" (click)="creditLineFilters.show()"
																																	 mdTooltip="{{CARD.operatorMeaning}}-{{CARD.value}}" *ngIf="CARD.criteria == 'VIEW_COLUMN'">
																																	</i>
											
																																	<popover-content #creditLineFilters placement="right" [animation]="true" [closeOnClickOutside]="false" style="z-index: 999 !important;width:250px;height:80px">
											
																																		<div class="row">
																																			<div class="col-md-12">
																																				<i class="pull-right fa fa-times hand" aria-hidden="true" mdTooltip="Close" (click)="creditLineFilters.hide();">
																																				</i>
																																				<div class="table-responsive">
																																					<table>
																																						<thead>
																																							<tr>
																																								<th style="width:50px;">Operator</th>
																																								<th>Value</th>
																																							</tr>
																																						</thead>
																																						<tbody>
																																							<tr>
																																								<td style="width:50px;">
											
																																									<md-select class="md-no-placeholder" [(ngModel)]="CARD.operator" [ngClass]="{'color-black' : isViewOnly}" [disabled]="isViewOnly ||!ruleObj.editRule"
																																									 name="operator{{i}}{{k}}{{crd}}" required #operator{{i}}{{k}}{{drd}}="ngModel" *ngIf="!isViewOnly && ruleObj.editRule && creditLineLevelOperatorsLOV && creditLineLevelOperatorsLOV[i] && creditLineLevelOperatorsLOV[i][k] && creditLineLevelOperatorsLOV[i][k][crd] && CARD.criteria == 'VIEW_COLUMN'">
																																										<md-option *ngFor="let operator of creditLineLevelOperatorsLOV[i][k][crd]" [value]="operator.lookUpCode"> {{ operator.meaning}} </md-option>
																																									</md-select>
																																									<span class="linetext-input" *ngIf="isViewOnly || !ruleObj.editRule">{{CARD.operatorMeaning}}</span>
																																								</td>
																																								<td>
																																									<md-input-container class="example-full-width" *ngIf="!isViewOnly && CARD.criteria == 'VIEW_COLUMN'">
																																										<input class="inputHeight" mdInput [(ngModel)]="CARD.value" [ngClass]="{'color-black' : true }" [disabled]="isViewOnly" name="value{{i}}{{k}}{{crd}}"
																																										 required #value{{i}}{{k}}{{crd}}="ngModel">
																																									</md-input-container>
																																								</td>
																																							</tr>
																																						</tbody>
																																					</table>
																																				</div>
																																			</div>
																																		</div>
											
																																	</popover-content> -->



																					</td>

																				</tr>

																			</tbody>
																		</table>

																	</div>
																	<!-- 
																												<div *ngIf="displayCreditConditions && displayCreditConditions[i] && displayCreditConditions[i][k]">
																													<popover-content #creditRuleConditions placement="right" [animation]="true" style="z-index: 999 !important;">
																														<div class="row">
											
											
																															<div>
																									
																															</div>
																														</div>
																													</popover-content>
																												</div> -->
																	<div class="table-responsive table-header-styles" style="overflow-x:visible;" *ngIf="lineItem.lineType == 'CREDIT' && lineItem.lineSelectedIndex==1"
																	 style="padding-top: 14px;">
																		<table class="table" *ngIf="isViewOnly || !ruleObj.editRule">
																			<thead class="text-nowrap">
																				<tr>
																					<th>Sequence</th>
																					<th>Column</th>
																					<th>Operator</th>
																					<th>Value</th>
																				</tr>

																			</thead>
																			<tbody class="text-nowrap">
																				<tr *ngFor="let condition of lineItem.accountingRuleConditions;let debitRC=index">
																					<td>{{debitRC+1}}</td>
																					<td>{{condition.sViewColumnName}}</td>
																					<td>{{condition.operatorMeaning}}</td>
																					<td>{{condition.value}}</td>
																				</tr>
																			</tbody>
																		</table>
																		<span *ngIf="!isViewOnly && ruleObj.editRule && (!lineItem.accountingRuleConditions || lineItem.accountingRuleConditions.length==0)">Add New Condition
																			<button md-icon-button mdTooltip="Add New Condition" (click)="addMappingCriteriaForCreditLines(i,k,lineItem.accountingRuleConditions.length)">
																				<md-icon>exposure_plus_1</md-icon>
																			</button>
																		</span>
																		<table class="table" *ngIf="!isViewOnly && ruleObj.editRule && lineItem.accountingRuleConditions.length>0">
																			<thead class="text-nowrap">
																				<tr>
																					<th>Sequence</th>
																					<th>Column*</th>
																					<th>Operator*</th>
																					<th>Value*</th>
																					<th>
																						<button md-icon-button mdTooltip="Add New Condition" (click)="addMappingCriteriaForCreditLines(i,k,lineItem.accountingRuleConditions.length)">
																							<md-icon>exposure_plus_1</md-icon>
																						</button>
																					</th>
																				</tr>

																			</thead>
																			<tbody class="text-nowrap">

																				<tr *ngFor="let condition of lineItem.accountingRuleConditions;let crc=index">
																					<td>
																						<span class="linetext-input" style="top:24px;" *ngIf="!isViewOnly && ruleObj.editRule">{{crc+1}}</span>
																					</td>
																					<td>
																						<md-select class="md-no-placeholder" [(ngModel)]="condition.sViewColumnId" [ngClass]="{'color-black' : true}" name="sViewColumnId{{i}}{{k}}{{crc}}"
																						 #sViewColumnId{{i}}{{k}}{{crc}}="ngModel" *ngIf="!isViewOnly && ruleObj.editRule">
																							<md-option *ngFor="let col of ruleObj.dvColumns" [value]="col.id" (click)="condition.dataType = col.colDataType;SelectCreditLineConditionColumn(i,k,crc,col.colDataType,col.columnName)">
																								{{ col.columnName}} </md-option>
																						</md-select>
																					</td>
																					<td>
																						<md-select class="md-no-placeholder" [(ngModel)]="condition.operator" [ngClass]="{'color-black' : isViewOnly}" name="operatorLovForConditions{{i}}{{k}}{{crc}}"
																						 #operatorLovForConditions{{i}}{{k}}{{crc}}="ngModel" *ngIf="!isViewOnly && ruleObj.editRule">
																							<md-option *ngFor="let operator of condition.operatorList" [value]="operator.lookUpCode"> {{ operator.meaning}} </md-option>
																						</md-select>
																						<p class="help-block errorFont validation-error" *ngIf="accRuleForm.hasError('required', 'operatorLovForConditions'+i+k+crd) && ruleGroupService.submitted">Operator is required.</p>
																					</td>
																					<td>
																						<md-input-container *ngIf="!isViewOnly && ruleObj.editRule">
																							<input class="inputHeight" mdInput [(ngModel)]="condition.value" name="value{{i}}{{k}}{{crc}}" required #value{{i}}{{j}}{{crc}}="ngModel"> </md-input-container>
																						<p class="help-block errorFont validation-error" *ngIf="accRuleForm.hasError('required', 'value'+i+k+crd) && ruleGroupService.submitted">Value is required.</p>
																					</td>
																					<td>
																						<button md-icon-button *ngIf="!isViewOnly && !ruleObj.id && ruleObj.editRule" (click)="deleteCreditRuleCondition(i,k,crc)"
																						 mdTooltip="Delete condition">
																							<md-icon>delete</md-icon>
																						</button>

																					</td>
																				</tr>
																			</tbody>
																		</table>
																	</div>

																</div>

																<!-- <div class="ftlFunction" *ngIf="creditLineModal && creditLineModal[i] && creditLineModal[i][k]">
																												<p-dialog [resizable]="true" [responsive]="true" [(visible)]="creditLineModal[i][k]" [modal]="true">
																													<p-header>
																														Credit Line Conditions
																														<i class="fa fa-copy hand pull-right" style="font-size: 15px;	font-weight: bold;margin-top: 5px;" aria-hidden="true" id="showIcon"
																														 (click)="copyConditions(i,k)" mdTooltip="Copy from debit" *ngIf="isCreateNew || !ruleObj.id">
																														</i>
																													</p-header>
											
																												</p-dialog>
																											</div> -->

															</div>
														</md-expansion-panel>
													</md-accordion>

												</ng-template>

											</div>
										</div>
									<!-- </md-expansion-panel>

								</md-accordion>
							</div> -->

						</div>
					</md-expansion-panel>



				</md-accordion>
			</div>


		</ng-template>

	</div>
</form>